from __future__ import unicode_literals
from flask import Flask
from flask import render_template
from flask import request
from flask import session
from flask import redirect
from flask import url_for
import json
import os
from functools import wraps
import random
import datetime
import model
from contextlib import closing
import psycopg2


app = Flask(__name__)

app.config['SECRET_KEY'] = os.environ.get(
    'FLASK_SECRET_KEY', 'sooperseekritvaluenooneshouldknow'
)

app.config['DATABASE'] = os.environ.get(
    'DATABASE_URL', 'dbname=telephone_db user=store'
)

sorry_image = '{"objects": [{"opacity": 1, "strokeMiterLimit": 10, "height": 0, "visible": true, "stroke": "rgb(0, 0, 128)", "fill": null, "angle": 0, "flipX": false, "flipY": false, "top": 93, "scaleX": 1, "scaleY": 1, "strokeLineJoin": "round", "width": 1, "backgroundColor": "", "clipTo": null, "type": "path", "strokeLineCap": "round", "strokeDashArray": null, "strokeWidth": 30, "originY": "center", "originX": "center", "path": [["M", 0, 0], ["Q", 0, 0, 0.5, 0], ["L", 1, 0]], "shadow": null, "pathOffset": {"y": 0, "x": 0}, "left": 103.5}, {"opacity": 1, "strokeMiterLimit": 10, "height": 0, "visible": true, "stroke": "rgb(0, 0, 128)", "fill": null, "angle": 0, "flipX": false, "flipY": false, "top": 94, "scaleX": 1, "scaleY": 1, "strokeLineJoin": "round", "width": 1, "backgroundColor": "", "clipTo": null, "type": "path", "strokeLineCap": "round", "strokeDashArray": null, "strokeWidth": 30, "originY": "center", "originX": "center", "path": [["M", 0, 0], ["Q", 0, 0, 0.5, 0], ["L", 1, 0]], "shadow": null, "pathOffset": {"y": 0, "x": 0}, "left": 212.5}, {"opacity": 1, "strokeMiterLimit": 10, "height": 77, "visible": true, "stroke": "rgb(255, 0, 0)", "fill": null, "angle": 0, "flipX": false, "flipY": false, "top": 218.5, "scaleX": 1, "scaleY": 1, "strokeLineJoin": "round", "width": 181, "backgroundColor": "", "clipTo": null, "type": "path", "strokeLineCap": "round", "strokeDashArray": null, "strokeWidth": 12, "originY": "center", "originX": "center", "path": [["M", 0, 54], ["Q", 0, 54, 0.5, 54], ["Q", 1, 54, 0.75, 53.5], ["Q", 0.5, 53, 1, 51.5], ["Q", 1.5, 50, 3.5, 48.5], ["Q", 5.5, 47, 7.5, 44.5], ["Q", 9.5, 42, 11.5, 40.5], ["Q", 13.5, 39, 15.5, 37], ["Q", 17.5, 35, 20, 33], ["Q", 22.5, 31, 25, 29.5], ["Q", 27.5, 28, 30, 27], ["Q", 32.5, 26, 34.5, 25], ["Q", 36.5, 24, 39, 23], ["Q", 41.5, 22, 44.5, 21], ["Q", 47.5, 20, 50, 19], ["Q", 52.5, 18, 55, 17], ["Q", 57.5, 16, 60, 14.5], ["Q", 62.5, 13, 64.5, 12.5], ["Q", 66.5, 12, 68.5, 11.5], ["Q", 70.5, 11, 72, 10], ["Q", 73.5, 9, 76, 8], ["Q", 78.5, 7, 81.5, 5.5], ["Q", 84.5, 4, 87, 3], ["Q", 89.5, 2, 92.5, 1.5], ["Q", 95.5, 1, 99, 0.5], ["Q", 102.5, 0, 107, 0], ["Q", 111.5, 0, 114, 0], ["Q", 116.5, 0, 119.5, 0], ["Q", 122.5, 0, 125, 0], ["Q", 127.5, 0, 131, 1], ["Q", 134.5, 2, 136.5, 3], ["Q", 138.5, 4, 140.5, 5], ["Q", 142.5, 6, 144, 7], ["Q", 145.5, 8, 147.5, 9.5], ["Q", 149.5, 11, 151.5, 12], ["Q", 153.5, 13, 154.5, 14], ["Q", 155.5, 15, 156.5, 16.5], ["Q", 157.5, 18, 158.5, 19], ["Q", 159.5, 20, 160, 21.5], ["Q", 160.5, 23, 161.5, 24.5], ["Q", 162.5, 26, 163.5, 28], ["Q", 164.5, 30, 165, 32], ["Q", 165.5, 34, 166, 35], ["Q", 166.5, 36, 167, 37], ["Q", 167.5, 38, 168.5, 39], ["Q", 169.5, 40, 170, 41.5], ["Q", 170.5, 43, 171, 44.5], ["Q", 171.5, 46, 172, 47.5], ["Q", 172.5, 49, 173.5, 51], ["Q", 174.5, 53, 175.5, 55], ["Q", 176.5, 57, 177, 58.5], ["Q", 177.5, 60, 178, 62], ["Q", 178.5, 64, 179, 64.5], ["Q", 179.5, 65, 179.5, 65.5], ["Q", 179.5, 66, 179.5, 66.5], ["Q", 179.5, 67, 179.5, 67], ["Q", 179.5, 67, 179.5, 67.5], ["Q", 179.5, 68, 180, 68.5], ["Q", 180.5, 69, 180.5, 70], ["Q", 180.5, 71, 180.5, 72], ["Q", 180.5, 73, 180.5, 74], ["Q", 180.5, 75, 180.5, 75.5], ["Q", 180.5, 76, 180.5, 76.5], ["Q", 180.5, 77, 181, 77], ["L", 181.5, 77]], "shadow": null, "pathOffset": {"y": 0, "x": 0}, "left": 161.75}], "background": ""}'


def connect_db():
    """Return a connection to the configured database"""
    if 'DATABASE' not in app.config:
        app.config['DATABASE'] = os.environ.get(
            'DATABASE_URL', 'dbname=telephone_db user=store')
    return psycopg2.connect(app.config['DATABASE'])


def init_db():
    """Initialize the database.
    WARNING: This will drop existsing tables"""
    with closing(connect_db()) as db:
        db.cursor().execute(model.DB_DROP_TABLES)
        db.commit()
        db.cursor().execute(model.PROMPT_TABLE_SCHEMA)
        db.commit()
        db.cursor().execute(model.IMAGE_TABLE_SCHEMA)
        db.commit()
        db.cursor().execute(model.GAME_TABLE_SCHEMA)
        db.commit()


def requires_username(view):
    pass
    @wraps(view)
    def decorated(*args, **kwargs):
        if 'username' not in session:
            fakenames = ['Homer', 'Marge', 'Bart', 'Lisa', 'Maggie', 'Krusty',
                         'Itchy', 'Scratchy', 'Dr. Hibbert', 'Nelson', 'Jimbo']
            session['username'] = random.sample(fakenames, 1)[0]

        return view(*args, **kwargs)
    return decorated


@requires_username
def get_first_prompt():
    #Retrieves a first prompt from a game that the user has not contributed to.
    with closing(connect_db()) as db:
        cur = db.cursor()
        username = session['username']
        #username = session['username']
        cur.execute(model.DB_GET_FIRST_PROMPT_A, [username])
        #prompts from games not yet contributed to by user
        p1 = set(cur.fetchall())
        cur.execute(model.DB_GET_FIRST_PROMPT_B)
        #prompts from games needing user input for next step
        p2 = set(cur.fetchall())
        first_prompts = p1.intersection(p2)
        db.commit()
    if first_prompts:
        result = first_prompts.pop()
        session['game_id'] = result[1]
    # If there is no game in the DB with no first prompt not contributed
    # by username, repeat the above game-fetching and selecting logic after
    # making a game.
    # This COULD be a much shorter while loop,
    # but that would make it harder to debug.
    else:
        create_game_on_step_two()
        # Repeat the above, but after creating a game.
        with closing(connect_db()) as db:
            cur = db.cursor()
            username = session['username']
            cur.execute(model.DB_GET_FIRST_PROMPT_A, [username])
            #prompts from games not yet contributed to by user
            p1 = set(cur.fetchall())
            cur.execute(model.DB_GET_FIRST_PROMPT_B)
            #prompts from games needing user input for next step
            p2 = set(cur.fetchall())
            first_prompts = p1.intersection(p2)
            db.commit()
            result = first_prompts.pop()
            session['game_id'] = result[1]
    # This is the culmination of both sides of the conditional:
    return result[0]


@requires_username
def get_second_prompt():
    #Retrieves a first prompt from a game that the user has not contributed to.
    with closing(connect_db()) as db:
        cur = db.cursor()
        username = session['username']
        cur.execute(model.DB_GET_SECOND_PROMPT_A, [username])
        #prompts from games not yet contributed to by user
        p1 = set(cur.fetchall())
        cur.execute(model.DB_GET_SECOND_PROMPT_B)
        #prompts from games needing user input for next step
        p2 = set(cur.fetchall())
        second_prompts = p1.intersection(p2)
        db.commit()
    if second_prompts:
        result = second_prompts.pop()
        session['game_id'] = result[1]
        return result[0]
    return "Database could not find an appopriate game"


@requires_username
def get_first_image():
    #Retrieves a first prompt from a game that the user has not contributed to.
    with closing(connect_db()) as db:
        cur = db.cursor()
        username = session['username']
        cur.execute(model.DB_GET_FIRST_IMAGE_A, [username])
        #prompts from games not yet contributed to by user
        p1 = set(cur.fetchall())
        cur.execute(model.DB_GET_FIRST_IMAGE_B)
        #prompts from games needing user input for next step
        p2 = set(cur.fetchall())
        first_images = p1.intersection(p2)
        db.commit()
    if first_images:
        result = first_images.pop()
        session['game_id'] = result[1]
    # This COULD be a much shorter while loop,
    # but that would make it harder to debug.
    else:
        create_game_on_step_three()
        # Repeat the above, but after creating a game.
        with closing(connect_db()) as db:
            cur = db.cursor()
            username = session['username']
            cur.execute(model.DB_GET_FIRST_IMAGE_A, [username])
            #images from games not yet contributed to by user
            p1 = set(cur.fetchall())
            cur.execute(model.DB_GET_FIRST_IMAGE_B)
            #images from games needing user input for next step
            p2 = set(cur.fetchall())
            first_images = p1.intersection(p2)
            db.commit()
            result = first_images.pop()
            session['game_id'] = result[1]
    # This is the culmination of both sides of the conditional:
    return result[0]

@requires_username
def get_second_image():
    #Retrieves a first prompt from a game that the user has not contributed to.
    with closing(connect_db()) as db:
        cur = db.cursor()
        username = session['username']
        cur.execute(model.DB_GET_SECOND_IMAGE_A, [username])
        #prompts from games not yet contributed to by user
        p1 = set(cur.fetchall())
        cur.execute(model.DB_GET_SECOND_IMAGE_B)
        #prompts from games needing user input for next step
        p2 = set(cur.fetchall())
        second_images = p1.intersection(p2)
        db.commit()
    if second_images:
        result = second_images.pop()
        session['game_id'] = result[1]
        return result[0]
    return sorry_image


@requires_username
def create_game():
    # execute a DB_CREATE_GAME script, RETURNING id for the game
    with closing(connect_db()) as db:
        cur = db.cursor()
        cur.execute(model.DB_CREATE_GAME)
        game_id = cur.fetchone()[0]
        db.commit()
        return game_id


@requires_username
def create_game_on_step_two():
        ''' Chain together create_game() and store_data() using
        a randomly chosen default string as the first prompt.
        Called when a user has submitted their own prompt and
        needs to see a different user's prompt, but there are no
        other users' prompts -- so a default prompt must be
        created for them. '''

        # Note: We DO NOT need to call create_game() because store_data()
        # does that for us, and it also handles
        # cookie attribute assignment and accessing.
        # To be precise, store_data() puts the game_id inside the session
        # and also uses it, along with the preexisting session username,
        # to submit a prompt as if it was that user's prompt.

        # This function will autogenerate a first prompt for the user.
        list_of_default_prompts = ['A red shield decorated with two arrows and a slash.',
                                   'A smurf and a carebear walk into a bar...',
                                   'Dark Side Story']
        random_prompt = random.sample(list_of_default_prompts, 1)[0]
        # NOTE: default_username is only used in functions like this,
        # where default prompts are to be provided.
        # This parameterization allows us to call store_data() this way
        # for any step where a user needs a default prompt supplied.
        created_game_id = store_data('first_prompt_id',
                                     'prompts',
                                     random_prompt,
                                     default_username="A figment of your imagination")

        return created_game_id




@requires_username
def create_game_on_step_three():

    # Pull the game up to be ready for step three:
    created_game_id = create_game_on_step_two()

    # Generate a default image:

    # sorry_image = '{"objects": [{"opacity": 1, "strokeMiterLimit": 10, "height": 0, "visible": true, "stroke": "rgb(0, 0, 128)", "fill": null, "angle": 0, "flipX": false, "flipY": false, "top": 93, "scaleX": 1, "scaleY": 1, "strokeLineJoin": "round", "width": 1, "backgroundColor": "", "clipTo": null, "type": "path", "strokeLineCap": "round", "strokeDashArray": null, "strokeWidth": 30, "originY": "center", "originX": "center", "path": [["M", 0, 0], ["Q", 0, 0, 0.5, 0], ["L", 1, 0]], "shadow": null, "pathOffset": {"y": 0, "x": 0}, "left": 103.5}, {"opacity": 1, "strokeMiterLimit": 10, "height": 0, "visible": true, "stroke": "rgb(0, 0, 128)", "fill": null, "angle": 0, "flipX": false, "flipY": false, "top": 94, "scaleX": 1, "scaleY": 1, "strokeLineJoin": "round", "width": 1, "backgroundColor": "", "clipTo": null, "type": "path", "strokeLineCap": "round", "strokeDashArray": null, "strokeWidth": 30, "originY": "center", "originX": "center", "path": [["M", 0, 0], ["Q", 0, 0, 0.5, 0], ["L", 1, 0]], "shadow": null, "pathOffset": {"y": 0, "x": 0}, "left": 212.5}, {"opacity": 1, "strokeMiterLimit": 10, "height": 77, "visible": true, "stroke": "rgb(255, 0, 0)", "fill": null, "angle": 0, "flipX": false, "flipY": false, "top": 218.5, "scaleX": 1, "scaleY": 1, "strokeLineJoin": "round", "width": 181, "backgroundColor": "", "clipTo": null, "type": "path", "strokeLineCap": "round", "strokeDashArray": null, "strokeWidth": 12, "originY": "center", "originX": "center", "path": [["M", 0, 54], ["Q", 0, 54, 0.5, 54], ["Q", 1, 54, 0.75, 53.5], ["Q", 0.5, 53, 1, 51.5], ["Q", 1.5, 50, 3.5, 48.5], ["Q", 5.5, 47, 7.5, 44.5], ["Q", 9.5, 42, 11.5, 40.5], ["Q", 13.5, 39, 15.5, 37], ["Q", 17.5, 35, 20, 33], ["Q", 22.5, 31, 25, 29.5], ["Q", 27.5, 28, 30, 27], ["Q", 32.5, 26, 34.5, 25], ["Q", 36.5, 24, 39, 23], ["Q", 41.5, 22, 44.5, 21], ["Q", 47.5, 20, 50, 19], ["Q", 52.5, 18, 55, 17], ["Q", 57.5, 16, 60, 14.5], ["Q", 62.5, 13, 64.5, 12.5], ["Q", 66.5, 12, 68.5, 11.5], ["Q", 70.5, 11, 72, 10], ["Q", 73.5, 9, 76, 8], ["Q", 78.5, 7, 81.5, 5.5], ["Q", 84.5, 4, 87, 3], ["Q", 89.5, 2, 92.5, 1.5], ["Q", 95.5, 1, 99, 0.5], ["Q", 102.5, 0, 107, 0], ["Q", 111.5, 0, 114, 0], ["Q", 116.5, 0, 119.5, 0], ["Q", 122.5, 0, 125, 0], ["Q", 127.5, 0, 131, 1], ["Q", 134.5, 2, 136.5, 3], ["Q", 138.5, 4, 140.5, 5], ["Q", 142.5, 6, 144, 7], ["Q", 145.5, 8, 147.5, 9.5], ["Q", 149.5, 11, 151.5, 12], ["Q", 153.5, 13, 154.5, 14], ["Q", 155.5, 15, 156.5, 16.5], ["Q", 157.5, 18, 158.5, 19], ["Q", 159.5, 20, 160, 21.5], ["Q", 160.5, 23, 161.5, 24.5], ["Q", 162.5, 26, 163.5, 28], ["Q", 164.5, 30, 165, 32], ["Q", 165.5, 34, 166, 35], ["Q", 166.5, 36, 167, 37], ["Q", 167.5, 38, 168.5, 39], ["Q", 169.5, 40, 170, 41.5], ["Q", 170.5, 43, 171, 44.5], ["Q", 171.5, 46, 172, 47.5], ["Q", 172.5, 49, 173.5, 51], ["Q", 174.5, 53, 175.5, 55], ["Q", 176.5, 57, 177, 58.5], ["Q", 177.5, 60, 178, 62], ["Q", 178.5, 64, 179, 64.5], ["Q", 179.5, 65, 179.5, 65.5], ["Q", 179.5, 66, 179.5, 66.5], ["Q", 179.5, 67, 179.5, 67], ["Q", 179.5, 67, 179.5, 67.5], ["Q", 179.5, 68, 180, 68.5], ["Q", 180.5, 69, 180.5, 70], ["Q", 180.5, 71, 180.5, 72], ["Q", 180.5, 73, 180.5, 74], ["Q", 180.5, 75, 180.5, 75.5], ["Q", 180.5, 76, 180.5, 76.5], ["Q", 180.5, 77, 181, 77], ["L", 181.5, 77]], "shadow": null, "pathOffset": {"y": 0, "x": 0}, "left": 161.75}], "background": ""}'
    # JSON.stringify(drawingCanvas.toJSON())

    list_of_default_images = ['{"objects":[{"type":"path","originX":"center","originY":"center","left":40,"top":39,"width":84,"height":90,"fill":null,"stroke":"rgb(255, 255, 0)","strokeWidth":30,"strokeDashArray":null,"strokeLineCap":"round","strokeLineJoin":"round","strokeMiterLimit":10,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","path":[["M",4.5,6],["Q",4.5,6,5,6],["Q",5.5,6,5.25,6.5],["Q",5,7,5,8],["Q",5,9,5,11],["Q",5,13,5,14.5],["Q",5,16,5,17.5],["Q",5,19,5,21],["Q",5,23,5,25.5],["Q",5,28,5,28.5],["Q",5,29,5,29.5],["Q",5,30,5,30.5],["Q",5,31,5,31.5],["Q",5,32,5,32.5],["Q",5,33,5.5,33.5],["Q",6,34,7,35.5],["Q",8,37,9.5,38.5],["Q",11,40,13,42.5],["Q",15,45,16,46],["Q",17,47,17.5,48],["Q",18,49,18,49],["Q",18,49,18.5,49],["Q",19,49,19.5,49],["Q",20,49,20,48.5],["Q",20,48,21,47.5],["Q",22,47,23.5,45.5],["Q",25,44,27.5,42.5],["Q",30,41,33,38.5],["Q",36,36,40.5,34],["Q",45,32,48.5,29.5],["Q",52,27,56,25.5],["Q",60,24,63.5,22],["Q",67,20,69,19],["Q",71,18,72,17.5],["Q",73,17,74,17],["Q",75,17,74.5,17],["Q",74,17,73.5,17.5],["Q",73,18,72.5,19],["Q",72,20,71,22.5],["Q",70,25,67.5,28.5],["Q",65,32,63,34.5],["Q",61,37,59.5,40],["Q",58,43,55,45],["Q",52,47,50,49.5],["Q",48,52,46.5,54],["Q",45,56,44,57],["Q",43,58,41.5,59.5],["Q",40,61,38.5,62],["Q",37,63,35.5,64.5],["Q",34,66,33,67],["Q",32,68,31,69.5],["Q",30,71,29,72],["Q",28,73,27.5,73.5],["Q",27,74,26,75],["Q",25,76,24,76.5],["Q",23,77,22.5,77.5],["Q",22,78,20.5,78],["Q",19,78,18,78],["Q",17,78,16,78],["Q",15,78,14,78],["Q",13,78,12.5,78],["Q",12,78,11,78],["Q",10,78,9.5,78],["Q",9,78,8.5,78],["Q",8,78,7.5,78],["Q",7,78,6.5,78],["Q",6,78,6,77.5],["Q",6,77,5.5,77],["Q",5,77,5.5,77],["Q",6,77,8,76.5],["Q",10,76,12.5,74.5],["Q",15,73,18.5,71.5],["Q",22,70,26,68],["Q",30,66,32.5,64],["Q",35,62,39,60.5],["Q",43,59,44.5,57.5],["Q",46,56,48,55],["Q",50,54,51.5,53],["Q",53,52,54,50.5],["Q",55,49,55.5,48.5],["Q",56,48,57,47.5],["Q",58,47,58.5,46.5],["Q",59,46,60,45.5],["Q",61,45,61.5,44.5],["Q",62,44,63,43],["Q",64,42,65,40.5],["Q",66,39,67,37.5],["Q",68,36,69.5,34],["Q",71,32,72,30.5],["Q",73,29,74,28],["Q",75,27,75.5,26],["Q",76,25,77,23.5],["Q",78,22,78.5,21.5],["Q",79,21,79.5,19.5],["Q",80,18,80.5,17.5],["Q",81,17,81,16.5],["Q",81,16,81,15.5],["Q",81,15,81.5,15],["Q",82,15,82,14.5],["Q",82,14,82,13.5],["Q",82,13,82.5,13],["Q",83,13,83.5,12.5],["Q",84,12,84,12.5],["Q",84,13,84,15],["Q",84,17,83.5,18.5],["Q",83,20,81.5,22.5],["Q",80,25,79,27.5],["Q",78,30,77,32.5],["Q",76,35,74,37],["Q",72,39,71.5,40.5],["Q",71,42,70,43],["Q",69,44,68.5,45],["Q",68,46,67.5,47],["Q",67,48,66.5,48.5],["Q",66,49,65.5,49.5],["Q",65,50,64.5,51],["Q",64,52,63,54],["Q",62,56,61,57.5],["Q",60,59,59,60.5],["Q",58,62,57.5,63.5],["Q",57,65,56.5,66],["Q",56,67,55.5,68.5],["Q",55,70,54.5,71],["Q",54,72,54,73],["Q",54,74,53.5,74.5],["Q",53,75,51.5,75.5],["Q",50,76,49.5,76.5],["Q",49,77,48,77.5],["Q",47,78,46,78.5],["Q",45,79,44.5,79.5],["Q",44,80,43,80.5],["Q",42,81,40.5,81.5],["Q",39,82,38,82.5],["Q",37,83,36,83],["Q",35,83,34,84],["Q",33,85,32.5,85],["Q",32,85,30.5,85.5],["Q",29,86,28,86],["Q",27,86,26,86.5],["Q",25,87,23.5,87],["Q",22,87,21,87.5],["Q",20,88,19,88],["Q",18,88,16.5,88],["Q",15,88,14,88.5],["Q",13,89,12,89],["Q",11,89,10,89.5],["Q",9,90,7.5,90],["Q",6,90,5,90],["Q",4,90,3,90],["Q",2,90,1.5,90],["Q",1,90,0.5,90],["Q",0,90,0,89.5],["Q",0,89,0,88.5],["Q",0,88,0,87.5],["Q",0,87,0,86],["Q",0,85,0,83],["Q",0,81,0,78],["Q",0,75,0,71.5],["Q",0,68,0,65.5],["Q",0,63,0,61],["Q",0,59,0,56.5],["Q",0,54,0,52],["Q",0,50,0,48],["Q",0,46,0,44.5],["Q",0,43,0,42.5],["Q",0,42,0,41.5],["Q",0,41,0,40.5],["Q",0,40,0,39.5],["Q",0,39,0,36.5],["Q",0,34,0.5,29],["Q",1,24,1.5,20.5],["Q",2,17,2.5,13.5],["Q",3,10,3.5,8],["Q",4,6,4,5],["Q",4,4,4,3.5],["Q",4,3,4.5,2.5],["Q",5,2,5,1.5],["Q",5,1,5.5,1],["Q",6,1,6.5,1],["Q",7,1,8,1],["Q",9,1,9.5,1],["Q",10,1,11,1],["Q",12,1,13.5,1],["Q",15,1,16,1],["Q",17,1,18,1],["Q",19,1,20,1.5],["Q",21,2,21.5,2],["Q",22,2,23,2],["Q",24,2,24.5,2],["Q",25,2,26,2],["Q",27,2,27.5,2],["Q",28,2,29,2],["Q",30,2,31,2],["Q",32,2,33,2.5],["Q",34,3,34.5,3],["Q",35,3,36.5,3],["Q",38,3,39,3],["Q",40,3,40.5,3.5],["Q",41,4,41.5,4],["Q",42,4,42.5,4.5],["Q",43,5,43,5.5],["Q",43,6,43,6.5],["Q",43,7,43,7.5],["Q",43,8,43,8.5],["Q",43,9,43,9.5],["Q",43,10,43,10.5],["Q",43,11,43,12],["Q",43,13,43,13.5],["Q",43,14,43,14.5],["Q",43,15,42,15.5],["Q",41,16,39,17.5],["Q",37,19,35,19.5],["Q",33,20,32,20.5],["Q",31,21,29,21],["Q",27,21,26.5,21],["Q",26,21,25,21],["Q",24,21,23,21],["Q",22,21,21.5,21],["Q",21,21,20.5,21],["Q",20,21,19.5,21],["Q",19,21,18.5,21],["Q",18,21,18.5,21],["Q",19,21,20.5,20.5],["Q",22,20,25,19],["Q",28,18,31.5,16.5],["Q",35,15,42,11.5],["Q",49,8,53,6.5],["Q",57,5,61.5,3],["Q",66,1,67.5,0.5],["Q",69,0,69.5,0],["Q",70,0,70.5,0],["L",71,0]],"pathOffset":{"x":0,"y":0}},{"type":"path","originX":"center","originY":"center","left":222,"top":102,"width":418,"height":250,"fill":null,"stroke":"rgb(0, 255, 255)","strokeWidth":30,"strokeDashArray":null,"strokeLineCap":"round","strokeLineJoin":"round","strokeMiterLimit":10,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","path":[["M",0.5,195],["Q",0.5,195,1,195],["Q",1.5,195,1.25,194.5],["Q",1,194,1,193.5],["Q",1,193,1,191.5],["Q",1,190,1,188.5],["Q",1,187,1,186],["Q",1,185,1,184],["Q",1,183,1,181],["Q",1,179,1,176.5],["Q",1,174,1,172],["Q",1,170,1,169],["Q",1,168,1,167],["Q",1,166,1,165.5],["Q",1,165,1,164],["Q",1,163,1,162],["Q",1,161,1,159.5],["Q",1,158,1,156.5],["Q",1,155,1,154],["Q",1,153,1,151.5],["Q",1,150,1,148],["Q",1,146,1,144.5],["Q",1,143,1,142],["Q",1,141,0.5,141],["Q",0,141,0,140.5],["Q",0,140,0.5,140],["Q",1,140,3,140],["Q",5,140,7.5,140],["Q",10,140,12.5,139.5],["Q",15,139,18,139],["Q",21,139,23.5,138],["Q",26,137,27.5,136.5],["Q",29,136,30,135.5],["Q",31,135,31.5,134.5],["Q",32,134,32.5,133.5],["Q",33,133,34,132.5],["Q",35,132,36,131],["Q",37,130,38.5,129.5],["Q",40,129,41,128],["Q",42,127,43,126.5],["Q",44,126,44.5,124.5],["Q",45,123,45.5,122.5],["Q",46,122,46.5,120.5],["Q",47,119,48,118],["Q",49,117,50,115.5],["Q",51,114,52,112.5],["Q",53,111,54,110],["Q",55,109,56,108],["Q",57,107,58,106.5],["Q",59,106,60.5,104.5],["Q",62,103,63,101.5],["Q",64,100,65.5,98.5],["Q",67,97,68,95.5],["Q",69,94,70,93],["Q",71,92,72,91],["Q",73,90,74,89],["Q",75,88,75.5,87.5],["Q",76,87,77,86],["Q",78,85,78.5,85],["Q",79,85,79,84.5],["Q",79,84,80,83],["Q",81,82,82,80.5],["Q",83,79,84,77.5],["Q",85,76,86,74],["Q",87,72,88.5,69.5],["Q",90,67,91,64.5],["Q",92,62,92.5,60.5],["Q",93,59,93.5,57.5],["Q",94,56,94.5,55.5],["Q",95,55,96,53.5],["Q",97,52,97.5,49.5],["Q",98,47,98.5,44],["Q",99,41,100,38.5],["Q",101,36,102,34],["Q",103,32,103,31.5],["Q",103,31,103,30.5],["Q",103,30,103.5,30],["Q",104,30,107,30],["Q",110,30,115.5,29],["Q",121,28,125.5,27],["Q",130,26,139.5,25],["Q",149,24,157,23],["Q",165,22,174,20.5],["Q",183,19,192.5,18.5],["Q",202,18,212.5,17.5],["Q",223,17,230,16.5],["Q",237,16,242.5,16],["Q",248,16,252.5,15.5],["Q",257,15,259,15],["Q",261,15,261.5,15],["Q",262,15,262.5,15],["Q",263,15,263,14.5],["Q",263,14,263,13.5],["Q",263,13,265,12.5],["Q",267,12,273,9.5],["Q",279,7,288,5],["Q",297,3,312,1.5],["Q",327,0,333.5,0],["Q",340,0,343,0],["Q",346,0,348,0],["Q",350,0,350.5,0],["Q",351,0,351.5,0],["Q",352,0,350,1.5],["Q",348,3,340,8.5],["Q",332,14,322,22],["Q",312,30,300.5,36],["Q",289,42,282.5,45],["Q",276,48,268.5,52.5],["Q",261,57,255,58.5],["Q",249,60,245.5,61.5],["Q",242,63,240.5,63.5],["Q",239,64,238.5,64],["Q",238,64,237.5,64],["Q",237,64,239,63.5],["Q",241,63,245.5,61.5],["Q",250,60,259.5,56.5],["Q",269,53,284,50],["Q",299,47,311,45.5],["Q",323,44,337,42.5],["Q",351,41,358,41],["Q",365,41,367.5,40.5],["Q",370,40,370.5,40],["Q",371,40,368.5,40],["Q",366,40,348,40],["Q",330,40,296.5,43],["Q",263,46,232.5,49.5],["Q",202,53,168.5,55],["Q",135,57,119.5,57],["Q",104,57,93.5,57.5],["Q",83,58,79,58],["Q",75,58,74.5,58],["Q",74,58,74,58.5],["Q",74,59,74.5,59],["Q",75,59,80,59],["Q",85,59,94,59],["Q",103,59,115,59],["Q",127,59,140,59],["Q",153,59,168,57],["Q",183,55,195.5,52],["Q",208,49,214,47],["Q",220,45,223.5,43.5],["Q",227,42,229,41.5],["Q",231,41,231.5,41],["Q",232,41,232.5,41],["Q",233,41,233,40.5],["Q",233,40,232,39.5],["Q",231,39,229.5,39],["Q",228,39,227.5,38.5],["Q",227,38,227,37.5],["Q",227,37,227,36.5],["Q",227,36,232,33.5],["Q",237,31,249.5,25.5],["Q",262,20,271,16.5],["Q",280,13,286,11],["Q",292,9,294.5,8.5],["Q",297,8,298.5,8],["Q",300,8,300.5,8],["Q",301,8,301,8.5],["Q",301,9,300.5,9.5],["Q",300,10,296.5,13],["Q",293,16,284.5,22],["Q",276,28,261,38.5],["Q",246,49,231.5,56.5],["Q",217,64,200,72.5],["Q",183,81,168.5,86],["Q",154,91,146.5,93],["Q",139,95,129.5,96],["Q",120,97,114.5,98.5],["Q",109,100,104,100.5],["Q",99,101,95,101.5],["Q",91,102,87.5,103],["Q",84,104,78,106],["Q",72,108,68,110],["Q",64,112,59.5,114.5],["Q",55,117,51,120.5],["Q",47,124,44,128],["Q",41,132,38.5,135],["Q",36,138,33.5,142],["Q",31,146,29.5,148.5],["Q",28,151,27,153],["Q",26,155,24.5,156.5],["Q",23,158,22,160],["Q",21,162,20.5,164],["Q",20,166,19.5,167],["Q",19,168,19,170.5],["Q",19,173,18.5,174.5],["Q",18,176,18,177.5],["Q",18,179,18,180],["Q",18,181,18,182],["Q",18,183,18,184],["Q",18,185,18,185.5],["Q",18,186,18.5,186],["Q",19,186,20.5,186.5],["Q",22,187,23,187.5],["Q",24,188,26,189],["Q",28,190,31,191],["Q",34,192,36,192.5],["Q",38,193,40.5,194.5],["Q",43,196,46,196],["Q",49,196,51.5,196],["Q",54,196,56.5,196],["Q",59,196,61.5,196],["Q",64,196,67.5,196],["Q",71,196,76,196],["Q",81,196,86.5,196],["Q",92,196,98,196],["Q",104,196,108.5,196],["Q",113,196,120,196],["Q",127,196,131.5,196],["Q",136,196,141.5,196],["Q",147,196,151,196],["Q",155,196,159.5,196],["Q",164,196,168.5,196],["Q",173,196,177,196],["Q",181,196,184,196],["Q",187,196,190.5,196],["Q",194,196,196.5,196],["Q",199,196,203,195.5],["Q",207,195,211.5,194],["Q",216,193,221.5,192],["Q",227,191,232.5,190],["Q",238,189,243,189],["Q",248,189,253,188.5],["Q",258,188,262.5,187.5],["Q",267,187,271,187],["Q",275,187,278.5,187],["Q",282,187,284.5,186.5],["Q",287,186,288.5,186],["Q",290,186,291.5,185.5],["Q",293,185,294,185],["Q",295,185,295.5,184.5],["Q",296,184,296.5,183.5],["Q",297,183,297.5,182],["Q",298,181,299,179.5],["Q",300,178,302,177],["Q",304,176,307,174],["Q",310,172,312,171],["Q",314,170,315,169.5],["Q",316,169,316.5,168.5],["Q",317,168,317,167.5],["Q",317,167,317,166],["Q",317,165,317,163.5],["Q",317,162,317,159.5],["Q",317,157,316,154.5],["Q",315,152,314,149.5],["Q",313,147,311,139],["Q",309,131,305,121.5],["Q",301,112,298.5,104],["Q",296,96,293.5,87],["Q",291,78,289,70],["Q",287,62,286,56.5],["Q",285,51,284,48],["Q",283,45,283,43],["Q",283,41,283,40.5],["Q",283,40,283,41.5],["Q",283,43,283,57.5],["Q",283,72,282,99.5],["Q",281,127,277,148.5],["Q",273,170,270.5,185.5],["Q",268,201,266,214],["Q",264,227,261.5,234.5],["Q",259,242,258,245],["Q",257,248,256.5,249],["Q",256,250,255.5,250],["Q",255,250,254.5,249.5],["Q",254,249,251.5,244.5],["Q",249,240,242,231],["Q",235,222,230,212.5],["Q",225,203,219.5,194],["Q",214,185,210.5,176],["Q",207,167,205.5,161],["Q",204,155,204,152],["Q",204,149,204,147],["Q",204,145,204,144],["Q",204,143,204,142.5],["Q",204,142,203.5,143],["Q",203,144,195,154],["Q",187,164,169,180],["Q",151,196,133.5,206.5],["Q",116,217,95.5,225],["Q",75,233,62.5,237],["Q",50,241,37,242.5],["Q",24,244,15.5,244],["Q",7,244,4,244],["Q",1,244,1,243],["Q",1,242,1.5,238],["Q",2,234,8,230],["Q",14,226,25.5,219],["Q",37,212,50.5,205.5],["Q",64,199,80.5,192.5],["Q",97,186,114.5,180.5],["Q",132,175,145,172],["Q",158,169,171.5,166.5],["Q",185,164,194,163.5],["Q",203,163,209,162],["Q",215,161,219,161],["Q",223,161,225,161],["Q",227,161,228,161],["Q",229,161,229.5,161],["Q",230,161,228.5,161],["Q",227,161,219,161],["Q",211,161,197.5,161],["Q",184,161,165,161],["Q",146,161,135,161],["Q",124,161,111.5,161],["Q",99,161,93.5,161],["Q",88,161,85.5,160.5],["Q",83,160,82.5,160],["Q",82,160,82,159.5],["Q",82,159,82,158.5],["Q",82,158,83.5,157],["Q",85,156,98,151],["Q",111,146,140.5,136.5],["Q",170,127,214,114.5],["Q",258,102,288,95],["Q",318,88,339,83],["Q",360,78,376.5,75.5],["Q",393,73,399.5,71],["Q",406,69,409,69],["Q",412,69,414,69],["Q",416,69,416.5,69],["Q",417,69,417.5,69],["Q",418,69,418,68.5],["Q",418,68,418,67.5],["Q",418,67,402.5,67],["Q",387,67,355.5,67],["Q",324,67,298.5,67],["Q",273,67,254,67],["Q",235,67,219,67],["Q",203,67,196,67],["Q",189,67,185,67],["Q",181,67,179,67],["Q",177,67,175,67],["Q",173,67,170.5,67],["Q",168,67,163,67],["Q",158,67,151,67],["Q",144,67,138,67],["Q",132,67,127,67],["Q",122,67,118.5,68],["Q",115,69,112.5,71.5],["Q",110,74,107.5,77.5],["Q",105,81,102.5,86],["Q",100,91,97,96.5],["Q",94,102,92,106.5],["Q",90,111,89,115.5],["Q",88,120,87,122],["Q",86,124,86,125.5],["Q",86,127,85.5,128],["Q",85,129,85,130],["Q",85,131,85,131.5],["Q",85,132,84.5,132.5],["Q",84,133,82.5,135],["Q",81,137,78,140],["Q",75,143,71.5,147],["Q",68,151,63.5,155],["Q",59,159,56.5,160.5],["Q",54,162,50.5,164],["Q",47,166,46,167],["Q",45,168,44.5,168],["Q",44,168,44,167.5],["Q",44,167,44.5,166],["Q",45,165,49,162],["Q",53,159,61,157],["Q",69,155,83.5,152.5],["Q",98,150,114.5,148.5],["Q",131,147,150,146],["Q",169,145,186.5,143.5],["Q",204,142,220.5,141.5],["Q",237,141,250,141],["Q",263,141,272.5,140],["Q",282,139,289.5,139],["Q",297,139,304,139],["Q",311,139,314,139],["Q",317,139,318,139],["Q",319,139,320,139],["Q",321,139,318.5,139],["Q",316,139,308.5,139],["Q",301,139,286,141],["Q",271,143,256.5,144.5],["Q",242,146,231,147.5],["Q",220,149,208,150.5],["Q",196,152,190,153],["Q",184,154,181.5,155],["Q",179,156,178.5,156],["Q",178,156,177.5,156],["Q",177,156,177,154.5],["Q",177,153,176.5,147.5],["Q",176,142,175,131.5],["Q",174,121,174,103],["Q",174,85,174,67],["Q",174,49,178.5,38.5],["Q",183,28,186.5,21.5],["Q",190,15,194.5,11],["Q",199,7,203.5,6],["Q",208,5,211.5,5],["Q",215,5,218.5,5],["Q",222,5,223.5,6],["Q",225,7,227,10],["Q",229,13,229.5,16],["Q",230,19,231,22.5],["Q",232,26,232,31],["Q",232,36,232,42],["Q",232,48,223.5,61.5],["Q",215,75,206,86.5],["Q",197,98,184,108.5],["Q",171,119,159.5,126],["Q",148,133,141,137],["Q",134,141,129.5,142.5],["Q",125,144,122,144.5],["Q",119,145,118,145],["Q",117,145,116.5,145],["Q",116,145,117,145],["Q",118,145,123,145],["Q",128,145,133,145],["Q",138,145,144,145.5],["Q",150,146,155.5,147],["Q",161,148,165.5,148.5],["Q",170,149,172,150],["Q",174,151,175,151],["Q",176,151,176.5,151],["L",177,151]],"pathOffset":{"x":0,"y":0}},{"type":"path","originX":"center","originY":"center","left":137.5,"top":262,"width":172,"height":134,"fill":null,"stroke":"rgb(255, 165, 0)","strokeWidth":30,"strokeDashArray":null,"strokeLineCap":"round","strokeLineJoin":"round","strokeMiterLimit":10,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","path":[["M",134,0],["Q",134,0,134.5,0],["Q",135,0,134.25,0],["Q",133.5,0,133,0],["Q",132.5,0,131,0],["Q",129.5,0,129,0],["Q",128.5,0,126.5,0],["Q",124.5,0,123.5,0],["Q",122.5,0,121.5,0],["Q",120.5,0,119,0],["Q",117.5,0,116,0],["Q",114.5,0,113,0],["Q",111.5,0,110.5,0],["Q",109.5,0,108.5,0],["Q",107.5,0,106.5,0],["Q",105.5,0,105,0],["Q",104.5,0,103.5,0],["Q",102.5,0,101.5,0],["Q",100.5,0,99.5,0],["Q",98.5,0,97,0.5],["Q",95.5,1,94.5,1],["Q",93.5,1,92.5,1.5],["Q",91.5,2,90.5,2.5],["Q",89.5,3,88.5,3.5],["Q",87.5,4,86.5,4],["Q",85.5,4,84,4.5],["Q",82.5,5,81.5,5.5],["Q",80.5,6,79,6],["Q",77.5,6,75.5,6.5],["Q",73.5,7,72,8],["Q",70.5,9,69.5,9.5],["Q",68.5,10,67,10.5],["Q",65.5,11,64.5,11],["Q",63.5,11,63,11],["Q",62.5,11,61.5,11],["Q",60.5,11,59.5,11.5],["Q",58.5,12,57.5,12],["Q",56.5,12,55.5,12.5],["Q",54.5,13,54,13],["Q",53.5,13,53,13],["Q",52.5,13,52,13],["Q",51.5,13,51,13],["Q",50.5,13,50,13],["Q",49.5,13,50,13],["Q",50.5,13,51,13],["Q",51.5,13,52,13],["Q",52.5,13,53.5,13],["Q",54.5,13,55.5,14],["Q",56.5,15,57.5,15.5],["Q",58.5,16,60,16.5],["Q",61.5,17,62,18],["Q",62.5,19,64,20],["Q",65.5,21,66.5,22],["Q",67.5,23,68.5,23.5],["Q",69.5,24,70.5,25.5],["Q",71.5,27,72.5,28],["Q",73.5,29,75.5,30],["Q",77.5,31,78.5,32],["Q",79.5,33,80.5,33.5],["Q",81.5,34,84,35.5],["Q",86.5,37,88,37.5],["Q",89.5,38,91,39],["Q",92.5,40,94,40],["Q",95.5,40,96,40],["Q",96.5,40,97,40],["Q",97.5,40,98,40],["Q",98.5,40,99.5,40],["Q",100.5,40,101,40],["Q",101.5,40,102.5,39.5],["Q",103.5,39,104.5,38],["Q",105.5,37,106.5,35.5],["Q",107.5,34,108.5,33],["Q",109.5,32,111,30.5],["Q",112.5,29,113,29],["Q",113.5,29,114,28.5],["Q",114.5,28,115,28],["Q",115.5,28,116,28],["Q",116.5,28,119,27.5],["Q",121.5,27,122.5,27],["Q",123.5,27,125,26.5],["Q",126.5,26,127.5,26],["Q",128.5,26,129.5,26],["Q",130.5,26,131,25.5],["Q",131.5,25,132,25],["Q",132.5,25,132,25],["Q",131.5,25,131,26],["Q",130.5,27,129.5,29],["Q",128.5,31,127.5,35],["Q",126.5,39,126.5,42],["Q",126.5,45,125.5,48.5],["Q",124.5,52,124.5,56],["Q",124.5,60,124.5,63.5],["Q",124.5,67,124.5,70],["Q",124.5,73,124.5,75.5],["Q",124.5,78,124.5,79.5],["Q",124.5,81,124.5,82],["Q",124.5,83,125,84],["Q",125.5,85,126,85.5],["Q",126.5,86,127,87],["Q",127.5,88,127.5,88.5],["Q",127.5,89,128,89.5],["Q",128.5,90,129,90.5],["Q",129.5,91,130,92],["Q",130.5,93,131,94.5],["Q",131.5,96,132,97.5],["Q",132.5,99,133,100],["Q",133.5,101,135.5,102.5],["Q",137.5,104,138,105],["Q",138.5,106,139,107],["Q",139.5,108,140.5,109],["Q",141.5,110,143,111],["Q",144.5,112,146,113.5],["Q",147.5,115,148.5,116],["Q",149.5,117,150.5,118],["Q",151.5,119,152,119.5],["Q",152.5,120,153,120.5],["Q",153.5,121,154.5,121.5],["Q",155.5,122,157,123],["Q",158.5,124,159.5,124.5],["Q",160.5,125,161.5,126],["Q",162.5,127,163.5,128],["Q",164.5,129,165.5,129.5],["Q",166.5,130,167,130.5],["Q",167.5,131,168.5,131.5],["Q",169.5,132,170.5,132.5],["Q",171.5,133,172,133.5],["Q",172.5,134,172,134],["Q",171.5,134,169,133.5],["Q",166.5,133,161,130.5],["Q",155.5,128,149.5,125.5],["Q",143.5,123,138.5,121],["Q",133.5,119,130,117],["Q",126.5,115,123,113.5],["Q",119.5,112,117,110],["Q",114.5,108,113,107],["Q",111.5,106,110.5,104.5],["Q",109.5,103,108.5,102],["Q",107.5,101,106,99],["Q",104.5,97,103.5,95.5],["Q",102.5,94,102,92],["Q",101.5,90,100.5,89],["Q",99.5,88,99.5,86],["Q",99.5,84,98,82.5],["Q",96.5,81,96.5,79.5],["Q",96.5,78,95.5,76.5],["Q",94.5,75,94.5,74],["Q",94.5,73,93.5,72],["Q",92.5,71,92.5,70],["Q",92.5,69,91,68],["Q",89.5,67,89,66],["Q",88.5,65,87.5,63],["Q",86.5,61,86,60],["Q",85.5,59,84.5,58.5],["Q",83.5,58,82.5,57],["Q",81.5,56,80,54.5],["Q",78.5,53,77.5,51.5],["Q",76.5,50,75.5,48.5],["Q",74.5,47,73.5,46],["Q",72.5,45,71.5,44],["Q",70.5,43,69,42],["Q",67.5,41,67,40],["Q",66.5,39,66,38.5],["Q",65.5,38,65.5,37.5],["Q",65.5,37,65,36.5],["Q",64.5,36,64.5,35.5],["Q",64.5,35,64,34],["Q",63.5,33,62.5,32],["Q",61.5,31,61,30.5],["Q",60.5,30,59.5,29],["Q",58.5,28,58,27],["Q",57.5,26,57,26],["Q",56.5,26,56,26],["Q",55.5,26,55.5,25.5],["Q",55.5,25,55,25],["Q",54.5,25,54,25],["Q",53.5,25,53,25],["Q",52.5,25,52,25],["Q",51.5,25,51,24.5],["Q",50.5,24,50,24],["Q",49.5,24,49,24],["Q",48.5,24,47.5,24],["Q",46.5,24,46,23.5],["Q",45.5,23,45,23],["Q",44.5,23,44,23],["Q",43.5,23,43,23],["Q",42.5,23,41.5,22.5],["Q",40.5,22,39.5,22],["Q",38.5,22,37,22],["Q",35.5,22,34,21.5],["Q",32.5,21,31.5,20.5],["Q",30.5,20,30,20],["Q",29.5,20,29,20],["Q",28.5,20,28,20],["Q",27.5,20,27,20],["Q",26.5,20,25.5,20],["Q",24.5,20,23.5,20],["Q",22.5,20,21,20],["Q",19.5,20,18.5,19.5],["Q",17.5,19,17,19],["Q",16.5,19,15,19],["Q",13.5,19,12.5,18.5],["Q",11.5,18,10.5,18],["Q",9.5,18,9,18],["Q",8.5,18,8,18],["Q",7.5,18,6.5,17.5],["Q",5.5,17,4.5,16.5],["Q",3.5,16,3,16],["Q",2.5,16,1.5,15.5],["Q",0.5,15,0,15],["Q",-0.5,15,0,15],["Q",0.5,15,2.5,15],["Q",4.5,15,7,15],["Q",9.5,15,13.5,15],["Q",17.5,15,21.5,15],["Q",25.5,15,30,15],["Q",34.5,15,38,15],["Q",41.5,15,43,15],["Q",44.5,15,45.5,15],["Q",46.5,15,47,15],["Q",47.5,15,48,15],["Q",48.5,15,49,15],["Q",49.5,15,50,15],["Q",50.5,15,51.5,15],["Q",52.5,15,55.5,15.5],["Q",58.5,16,61,18],["Q",63.5,20,68,22],["Q",72.5,24,75.5,26],["Q",78.5,28,82,31],["Q",85.5,34,87.5,36],["Q",89.5,38,91,39],["Q",92.5,40,93.5,41.5],["Q",94.5,43,95,44],["Q",95.5,45,96.5,47],["Q",97.5,49,97.5,51],["Q",97.5,53,97.5,54.5],["Q",97.5,56,97.5,57.5],["Q",97.5,59,97.5,59.5],["Q",97.5,60,97.5,60.5],["Q",97.5,61,97.5,61.5],["Q",97.5,62,97.5,63],["Q",97.5,64,97.5,65.5],["Q",97.5,67,97.5,69],["Q",97.5,71,97.5,73.5],["Q",97.5,76,97,78],["Q",96.5,80,96,81.5],["Q",95.5,83,95,84.5],["Q",94.5,86,94.5,86.5],["Q",94.5,87,94,88],["Q",93.5,89,93,90],["Q",92.5,91,92.5,92],["Q",92.5,93,92.5,94.5],["Q",92.5,96,92.5,97.5],["Q",92.5,99,92.5,100],["Q",92.5,101,92.5,102.5],["Q",92.5,104,93,105.5],["Q",93.5,107,94,108.5],["Q",94.5,110,95,111],["Q",95.5,112,96.5,114],["Q",97.5,116,98,117],["Q",98.5,118,99,118.5],["Q",99.5,119,99.5,119],["Q",99.5,119,99.5,119.5],["Q",99.5,120,99.5,121],["Q",99.5,122,99.5,122.5],["Q",99.5,123,99.5,123.5],["Q",99.5,124,99.5,124.5],["Q",99.5,125,99.5,125.5],["Q",99.5,126,99.5,126.5],["Q",99.5,127,99.5,127.5],["Q",99.5,128,100,128.5],["Q",100.5,129,100.5,129.5],["Q",100.5,130,100.5,130.5],["Q",100.5,131,101,131.5],["Q",101.5,132,101.5,132.5],["Q",101.5,133,101.5,133.5],["L",101.5,134]],"pathOffset":{"x":0,"y":0}},{"type":"path","originX":"center","originY":"center","left":62,"top":256,"width":114,"height":140,"fill":null,"stroke":"rgb(0, 255, 0)","strokeWidth":30,"strokeDashArray":null,"strokeLineCap":"round","strokeLineJoin":"round","strokeMiterLimit":10,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","path":[["M",72.5,76],["Q",72.5,76,73,76],["Q",73.5,76,73.25,75.5],["Q",73,75,72,75],["Q",71,75,70,74],["Q",69,73,68.5,73],["Q",68,73,67.5,73],["Q",67,73,67,72.5],["Q",67,72,66.5,72],["Q",66,72,65.5,72],["Q",65,72,65,71.5],["Q",65,71,64,70.5],["Q",63,70,62,70],["Q",61,70,60.5,69.5],["Q",60,69,59.5,68.5],["Q",59,68,58,67.5],["Q",57,67,56,66.5],["Q",55,66,54,65],["Q",53,64,50.5,63],["Q",48,62,46.5,61.5],["Q",45,61,43,59.5],["Q",41,58,39,57],["Q",37,56,35.5,55],["Q",34,54,33,53.5],["Q",32,53,31,52.5],["Q",30,52,29,51.5],["Q",28,51,27.5,50.5],["Q",27,50,26.5,49.5],["Q",26,49,25.5,48.5],["Q",25,48,24,47.5],["Q",23,47,23,46],["Q",23,45,22.5,44.5],["Q",22,44,21,43.5],["Q",20,43,19.5,42.5],["Q",19,42,18.5,41],["Q",18,40,17.5,39.5],["Q",17,39,17,39],["Q",17,39,17,38],["Q",17,37,17,36.5],["Q",17,36,16.5,35.5],["Q",16,35,16,34.5],["Q",16,34,16,34],["Q",16,34,15.5,33.5],["Q",15,33,14.5,32],["Q",14,31,13.5,29],["Q",13,27,12.5,26],["Q",12,25,12,24],["Q",12,23,11.5,22],["Q",11,21,11,20.5],["Q",11,20,11,19.5],["Q",11,19,11.5,19],["Q",12,19,12.5,19],["Q",13,19,13.5,19],["Q",14,19,14.5,19],["Q",15,19,15.5,19],["Q",16,19,17,18.5],["Q",18,18,19,17.5],["Q",20,17,20.5,17],["Q",21,17,21.5,16.5],["Q",22,16,22.5,16],["Q",23,16,23.5,15.5],["Q",24,15,24.5,15],["Q",25,15,25.5,14.5],["Q",26,14,26.5,14],["Q",27,14,27.5,13.5],["Q",28,13,29,13],["Q",30,13,31,12],["Q",32,11,33.5,11],["Q",35,11,35.5,10.5],["Q",36,10,37,10],["Q",38,10,38.5,10],["Q",39,10,40,9.5],["Q",41,9,42.5,8.5],["Q",44,8,44.5,8],["Q",45,8,45.5,7.5],["Q",46,7,46.5,6.5],["Q",47,6,47.5,6],["Q",48,6,48.5,6],["Q",49,6,49.5,6],["Q",50,6,50.5,6],["Q",51,6,51.5,5.5],["Q",52,5,53.5,5],["Q",55,5,56,5],["Q",57,5,58.5,4.5],["Q",60,4,61,4],["Q",62,4,64,3.5],["Q",66,3,67.5,2.5],["Q",69,2,70,2],["Q",71,2,73,1.5],["Q",75,1,76.5,1],["Q",78,1,79.5,1],["Q",81,1,82.5,0.5],["Q",84,0,85.5,0],["Q",87,0,89,0],["Q",91,0,91.5,0],["Q",92,0,92.5,0],["Q",93,0,93,0],["Q",93,0,94.5,0],["Q",96,0,96.5,0],["Q",97,0,97.5,0],["Q",98,0,98.5,0],["Q",99,0,99.5,0],["Q",100,0,100.5,0],["Q",101,0,102.5,0],["Q",104,0,105.5,0],["Q",107,0,108.5,0],["Q",110,0,111,0],["Q",112,0,112.5,0],["Q",113,0,113.5,0],["Q",114,0,114,0],["Q",114,0,113.5,0],["Q",113,0,112.5,0],["Q",112,0,111.5,0],["Q",111,0,110,0],["Q",109,0,107.5,0.5],["Q",106,1,104.5,1.5],["Q",103,2,101.5,2],["Q",100,2,98,2.5],["Q",96,3,93.5,4],["Q",91,5,89,6.5],["Q",87,8,85.5,8],["Q",84,8,82,9],["Q",80,10,79,10],["Q",78,10,77.5,10.5],["Q",77,11,76.5,11],["Q",76,11,75.5,11],["Q",75,11,74.5,11],["Q",74,11,73,11.5],["Q",72,12,70.5,12],["Q",69,12,68,12.5],["Q",67,13,65.5,13],["Q",64,13,62.5,13],["Q",61,13,59.5,13],["Q",58,13,56.5,13],["Q",55,13,54,13],["Q",53,13,51.5,13],["Q",50,13,48.5,13],["Q",47,13,45,13],["Q",43,13,40.5,13],["Q",38,13,37,13],["Q",36,13,34,13],["Q",32,13,30,12.5],["Q",28,12,27,12],["Q",26,12,25,12],["Q",24,12,23,11.5],["Q",22,11,21.5,11],["Q",21,11,20,11],["Q",19,11,18.5,10.5],["Q",18,10,17,10],["Q",16,10,15,9.5],["Q",14,9,13.5,9],["Q",13,9,12.5,8.5],["Q",12,8,12,7.5],["Q",12,7,11.5,7],["Q",11,7,10.5,6.5],["Q",10,6,10,6],["Q",10,6,9.5,6],["Q",9,6,8.5,6],["Q",8,6,7.5,6],["Q",7,6,6.5,6],["Q",6,6,5.5,6.5],["Q",5,7,4.5,7.5],["Q",4,8,3.5,8.5],["Q",3,9,2.5,9.5],["Q",2,10,1.5,10.5],["Q",1,11,1,12],["Q",1,13,1,15],["Q",1,17,1,19.5],["Q",1,22,1,24],["Q",1,26,1,28.5],["Q",1,31,1,33.5],["Q",1,36,1,39],["Q",1,42,1,44],["Q",1,46,1,47.5],["Q",1,49,1,49.5],["Q",1,50,1.5,51.5],["Q",2,53,2.5,55],["Q",3,57,4,59.5],["Q",5,62,5.5,64],["Q",6,66,7,68.5],["Q",8,71,9,74],["Q",10,77,11.5,79.5],["Q",13,82,14,85],["Q",15,88,16,91.5],["Q",17,95,18,98.5],["Q",19,102,19.5,104.5],["Q",20,107,20.5,109.5],["Q",21,112,21,114],["Q",21,116,21,117],["Q",21,118,21,118.5],["Q",21,119,21,119.5],["Q",21,120,21,120.5],["Q",21,121,21,121.5],["Q",21,122,21,122.5],["Q",21,123,21,123.5],["Q",21,124,21.5,124.5],["Q",22,125,22.5,125],["Q",23,125,24,125.5],["Q",25,126,26.5,126.5],["Q",28,127,29,127.5],["Q",30,128,32.5,128.5],["Q",35,129,37,129],["Q",39,129,40,129.5],["Q",41,130,42,130.5],["Q",43,131,44,131],["Q",45,131,46,131],["Q",47,131,48.5,131],["Q",50,131,51.5,131],["Q",53,131,56,131],["Q",59,131,61.5,131],["Q",64,131,66.5,131],["Q",69,131,72.5,131],["Q",76,131,78,131],["Q",80,131,82,131],["Q",84,131,86.5,131],["Q",89,131,89.5,131],["Q",90,131,90.5,131],["Q",91,131,91.5,131],["Q",92,131,92.5,131],["Q",93,131,93.5,131],["Q",94,131,95,131],["Q",96,131,96.5,131],["Q",97,131,98,131],["Q",99,131,100.5,131],["Q",102,131,102.5,131.5],["Q",103,132,103.5,132],["Q",104,132,105,132],["Q",106,132,107,132],["Q",108,132,109.5,132],["Q",111,132,111.5,132],["Q",112,132,112.5,132],["Q",113,132,113,131.5],["Q",113,131,113,130.5],["Q",113,130,113,129.5],["Q",113,129,113,127.5],["Q",113,126,113,124],["Q",113,122,113,120],["Q",113,118,113,116],["Q",113,114,113,113],["Q",113,112,113,111],["Q",113,110,113,109.5],["Q",113,109,113,108],["Q",113,107,113,105.5],["Q",113,104,113,102.5],["Q",113,101,113,100.5],["Q",113,100,113,99],["Q",113,98,113,97.5],["Q",113,97,113,95.5],["Q",113,94,113,91.5],["Q",113,89,113,87.5],["Q",113,86,113,85],["Q",113,84,113,83.5],["Q",113,83,113,82],["Q",113,81,112,80],["Q",111,79,110.5,78.5],["Q",110,78,108.5,77],["Q",107,76,106,74.5],["Q",105,73,104,72],["Q",103,71,102,69.5],["Q",101,68,100.5,67],["Q",100,66,99,65.5],["Q",98,65,97,65],["Q",96,65,95.5,64.5],["Q",95,64,94,63],["Q",93,62,92,62],["Q",91,62,90,61.5],["Q",89,61,88,61],["Q",87,61,85.5,60.5],["Q",84,60,83,59.5],["Q",82,59,80.5,58.5],["Q",79,58,77.5,58],["Q",76,58,74.5,58],["Q",73,58,71,58],["Q",69,58,67,58],["Q",65,58,63,58],["Q",61,58,59,58],["Q",57,58,54.5,57.5],["Q",52,57,48.5,57],["Q",45,57,42.5,57],["Q",40,57,38,57],["Q",36,57,34,57],["Q",32,57,31,57],["Q",30,57,28.5,57],["Q",27,57,25.5,57.5],["Q",24,58,22,58.5],["Q",20,59,18.5,59.5],["Q",17,60,15.5,60.5],["Q",14,61,12.5,61.5],["Q",11,62,9.5,62.5],["Q",8,63,6,63.5],["Q",4,64,3.5,64.5],["Q",3,65,2,65.5],["Q",1,66,1,66.5],["Q",1,67,0.5,68],["Q",0,69,0,70],["Q",0,71,0,71.5],["Q",0,72,0,73],["Q",0,74,0,75],["Q",0,76,0,78],["Q",0,80,0,81.5],["Q",0,83,0,84.5],["Q",0,86,0,88.5],["Q",0,91,0.5,94],["Q",1,97,1.5,99.5],["Q",2,102,2.5,105.5],["Q",3,109,3.5,111],["Q",4,113,4.5,115],["Q",5,117,5,118.5],["Q",5,120,5,121],["Q",5,122,6,123.5],["Q",7,125,7.5,127],["Q",8,129,8,130],["Q",8,131,8.5,132.5],["Q",9,134,9.5,135],["Q",10,136,10,136.5],["Q",10,137,10.5,137.5],["Q",11,138,11,138.5],["Q",11,139,11.5,139.5],["Q",12,140,13,140],["Q",14,140,15,140],["Q",16,140,17.5,140],["Q",19,140,20.5,139.5],["Q",22,139,23.5,137.5],["Q",25,136,27,134.5],["Q",29,133,31.5,131],["Q",34,129,36.5,127.5],["Q",39,126,41,124.5],["Q",43,123,43.5,122.5],["Q",44,122,45.5,120.5],["Q",47,119,47.5,118.5],["Q",48,118,48.5,117],["Q",49,116,50,114.5],["Q",51,113,51.5,112.5],["Q",52,112,52.5,111.5],["Q",53,111,54,110.5],["Q",55,110,56.5,109],["Q",58,108,60.5,107],["Q",63,106,67,104.5],["Q",71,103,74.5,102.5],["Q",78,102,81,101.5],["Q",84,101,86,101],["Q",88,101,88.5,101],["Q",89,101,89.5,101],["Q",90,101,89.5,101],["Q",89,101,88,101],["Q",87,101,84.5,101],["Q",82,101,78.5,101],["Q",75,101,70.5,101],["Q",66,101,62.5,100.5],["Q",59,100,55.5,98.5],["Q",52,97,48,95.5],["Q",44,94,41.5,92],["Q",39,90,35.5,88.5],["Q",32,87,30.5,86],["Q",29,85,27.5,83.5],["Q",26,82,25.5,81.5],["Q",25,81,24.5,80.5],["Q",24,80,23.5,79.5],["Q",23,79,23.5,79.5],["Q",24,80,24.5,80.5],["Q",25,81,26,83],["Q",27,85,28.5,86.5],["Q",30,88,31.5,90.5],["Q",33,93,35,96],["Q",37,99,38,101.5],["Q",39,104,40,105],["Q",41,106,42.5,108],["Q",44,110,44.5,111],["Q",45,112,45.5,112.5],["Q",46,113,46,113.5],["Q",46,114,46.5,114],["Q",47,114,47,114.5],["L",47,115]],"pathOffset":{"x":0,"y":0}},{"type":"path","originX":"center","originY":"center","left":252,"top":233.25,"width":112,"height":159,"fill":null,"stroke":"rgb(0, 0, 255)","strokeWidth":30,"strokeDashArray":null,"strokeLineCap":"round","strokeLineJoin":"round","strokeMiterLimit":10,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","path":[["M",9.5,51.5],["Q",9.5,51.5,10,51.5],["Q",10.5,51.5,10.25,51],["Q",10,50.5,10,50],["Q",10,49.5,10,49],["Q",10,48.5,10,48],["Q",10,47.5,10,47],["Q",10,46.5,10,47],["Q",10,47.5,10,48],["Q",10,48.5,9.5,49.5],["Q",9,50.5,8.5,52],["Q",8,53.5,7,56],["Q",6,58.5,5,60.5],["Q",4,62.5,4,63.5],["Q",4,64.5,3.5,65],["Q",3,65.5,3,66],["Q",3,66.5,2.5,67],["Q",2,67.5,2,68],["Q",2,68.5,2,69.5],["Q",2,70.5,2,71.5],["Q",2,72.5,1.5,72.5],["Q",1,72.5,1,73],["Q",1,73.5,0.5,74],["Q",0,74.5,0,75],["Q",0,75.5,0,76],["Q",0,76.5,0,77],["Q",0,77.5,0,78.5],["Q",0,79.5,0,80.5],["Q",0,81.5,0,84],["Q",0,86.5,0,88],["Q",0,89.5,0,91],["Q",0,92.5,0,94],["Q",0,95.5,0,97.5],["Q",0,99.5,0,101],["Q",0,102.5,1,104],["Q",2,105.5,3,107],["Q",4,108.5,6,110],["Q",8,111.5,9,112.5],["Q",10,113.5,11.5,115.5],["Q",13,117.5,15,118.5],["Q",17,119.5,18.5,120.5],["Q",20,121.5,21.5,123],["Q",23,124.5,24,125],["Q",25,125.5,26,126],["Q",27,126.5,28.5,127.5],["Q",30,128.5,31,129],["Q",32,129.5,33,129.5],["Q",34,129.5,35.5,130.5],["Q",37,131.5,38,132],["Q",39,132.5,40,133],["Q",41,133.5,42.5,134.5],["Q",44,135.5,44.5,136],["Q",45,136.5,46.5,137],["Q",48,137.5,49,138.5],["Q",50,139.5,51,140.5],["Q",52,141.5,53.5,142.5],["Q",55,143.5,56,144],["Q",57,144.5,58,145],["Q",59,145.5,60,147],["Q",61,148.5,62,149],["Q",63,149.5,65,151],["Q",67,152.5,68,153.5],["Q",69,154.5,71.5,155],["Q",74,155.5,76,156.5],["Q",78,157.5,80,158],["Q",82,158.5,84.5,158.5],["Q",87,158.5,88.5,158.5],["Q",90,158.5,92.5,158.5],["Q",95,158.5,96,158.5],["Q",97,158.5,97.5,158.5],["Q",98,158.5,98.5,158.5],["Q",99,158.5,100,158.5],["Q",101,158.5,101.5,159],["Q",102,159.5,103,159.5],["Q",104,159.5,105,159.5],["Q",106,159.5,106.5,159.5],["Q",107,159.5,108,159.5],["Q",109,159.5,109.5,159.5],["Q",110,159.5,110.5,159.5],["Q",111,159.5,111,158.5],["Q",111,157.5,111.5,156.5],["Q",112,155.5,112,154.5],["Q",112,153.5,112,151],["Q",112,148.5,112,145.5],["Q",112,142.5,112,134.5],["Q",112,126.5,112,116],["Q",112,105.5,112,92.5],["Q",112,79.5,112,64.5],["Q",112,49.5,112,37.5],["Q",112,25.5,112,21],["Q",112,16.5,112,11.5],["Q",112,6.5,112,5],["Q",112,3.5,112,2.5],["Q",112,1.5,112,1],["Q",112,0.5,112,0],["Q",112,-0.5,112,0],["Q",112,0.5,109,6.5],["Q",106,12.5,101,19.5],["Q",96,26.5,90.5,32.5],["Q",85,38.5,78,44],["Q",71,49.5,67,53.5],["Q",63,57.5,60,60],["Q",57,62.5,55,63.5],["Q",53,64.5,51.5,64.5],["Q",50,64.5,49.5,64.5],["Q",49,64.5,48.5,64.5],["Q",48,64.5,47.5,64.5],["Q",47,64.5,46.5,64.5],["Q",46,64.5,45.5,64.5],["Q",45,64.5,44,64.5],["Q",43,64.5,42.5,64.5],["Q",42,64.5,41,63.5],["Q",40,62.5,39,61.5],["Q",38,60.5,37,59.5],["Q",36,58.5,36,58],["Q",36,57.5,36,56.5],["Q",36,55.5,35.5,55],["Q",35,54.5,35,54],["Q",35,53.5,35,53],["Q",35,52.5,34.5,51.5],["Q",34,50.5,33.5,50.5],["Q",33,50.5,32.5,50],["Q",32,49.5,31.5,48.5],["Q",31,47.5,30.5,47.5],["Q",30,47.5,29.5,47],["Q",29,46.5,28.5,46],["Q",28,45.5,28,44.5],["Q",28,43.5,28,43],["Q",28,42.5,28,42],["Q",28,41.5,28,41],["Q",28,40.5,29.5,40.5],["Q",31,40.5,33.5,39.5],["Q",36,38.5,39,38],["Q",42,37.5,44.5,36.5],["Q",47,35.5,50,35],["Q",53,34.5,56,34],["Q",59,33.5,62,33],["Q",65,32.5,67,31.5],["Q",69,30.5,71,30.5],["Q",73,30.5,74.5,30],["Q",76,29.5,78,29.5],["Q",80,29.5,81,29.5],["Q",82,29.5,84,29.5],["Q",86,29.5,87.5,29],["Q",89,28.5,90,28.5],["Q",91,28.5,92,28.5],["Q",93,28.5,94.5,28.5],["Q",96,28.5,98,28.5],["Q",100,28.5,101.5,28.5],["Q",103,28.5,103.5,28.5],["Q",104,28.5,105,28.5],["Q",106,28.5,106.5,29],["Q",107,29.5,107.5,30],["Q",108,30.5,108.5,31],["Q",109,31.5,109.5,32],["Q",110,32.5,110,33.5],["Q",110,34.5,110.5,36.5],["Q",111,38.5,111,42.5],["Q",111,46.5,111,49.5],["Q",111,52.5,111,56.5],["Q",111,60.5,111,66],["Q",111,71.5,111,77],["Q",111,82.5,110,87.5],["Q",109,92.5,108,98],["Q",107,103.5,105.5,109],["Q",104,114.5,102.5,118],["Q",101,121.5,99.5,126],["Q",98,130.5,97,134],["Q",96,137.5,96,139.5],["Q",96,141.5,96,143.5],["Q",96,145.5,96,147],["Q",96,148.5,96,149.5],["Q",96,150.5,96,151.5],["Q",96,152.5,96,153.5],["Q",96,154.5,96,155],["Q",96,155.5,96,156.5],["Q",96,157.5,95,157.5],["Q",94,157.5,90.5,157.5],["Q",87,157.5,82.5,157.5],["Q",78,157.5,70,157],["Q",62,156.5,56.5,154],["Q",51,151.5,41.5,148],["Q",32,144.5,27.5,141.5],["Q",23,138.5,18.5,136],["Q",14,133.5,11.5,131.5],["Q",9,129.5,7.5,128.5],["Q",6,127.5,5,126],["Q",4,124.5,4,124],["Q",4,123.5,4,123],["Q",4,122.5,4,122],["Q",4,121.5,4,121],["Q",4,120.5,4,119.5],["Q",4,118.5,3.5,118],["Q",3,117.5,3,117],["Q",3,116.5,4,116.5],["Q",5,116.5,6.5,116.5],["Q",8,116.5,9.5,116.5],["Q",11,116.5,14,116.5],["Q",17,116.5,20,115],["Q",23,113.5,24.5,112.5],["Q",26,111.5,27.5,110],["Q",29,108.5,30,107],["Q",31,105.5,33,104],["Q",35,102.5,37.5,101],["Q",40,99.5,42,98],["Q",44,96.5,45.5,95],["Q",47,93.5,48.5,92],["Q",50,90.5,52,90],["Q",54,89.5,55.5,89],["Q",57,88.5,58,88.5],["Q",59,88.5,60,88.5],["Q",61,88.5,61.5,88.5],["Q",62,88.5,63,88.5],["Q",64,88.5,64.5,88.5],["Q",65,88.5,65,89],["Q",65,89.5,65,91],["Q",65,92.5,65.5,95],["Q",66,97.5,66,99.5],["Q",66,101.5,66,103.5],["Q",66,105.5,66.5,107],["Q",67,108.5,67.5,110],["Q",68,111.5,68,112.5],["Q",68,113.5,68,114.5],["Q",68,115.5,68,116],["Q",68,116.5,68.5,117.5],["Q",69,118.5,69,119],["Q",69,119.5,69.5,120.5],["Q",70,121.5,70,122.5],["Q",70,123.5,71,124.5],["Q",72,125.5,72.5,127.5],["Q",73,129.5,74,132.5],["Q",75,135.5,76,138],["Q",77,140.5,79,142.5],["Q",81,144.5,81.5,145.5],["Q",82,146.5,82.5,147],["Q",83,147.5,83.5,147.5],["Q",84,147.5,84.5,143],["Q",85,138.5,86,131],["Q",87,123.5,88.5,114],["Q",90,104.5,91,96],["Q",92,87.5,93.5,79.5],["Q",95,71.5,96,66.5],["Q",97,61.5,97,58.5],["Q",97,55.5,97.5,53.5],["Q",98,51.5,98.5,50.5],["Q",99,49.5,99,48.5],["Q",99,47.5,99,47],["Q",99,46.5,98.5,47],["Q",98,47.5,96,50],["Q",94,52.5,91,55],["Q",88,57.5,84,60.5],["Q",80,63.5,77.5,65.5],["Q",75,67.5,73,68.5],["Q",71,69.5,68.5,70.5],["Q",66,71.5,63.5,72],["Q",61,72.5,59,72.5],["Q",57,72.5,55,72.5],["Q",53,72.5,51,72.5],["Q",49,72.5,47,72.5],["Q",45,72.5,43,72.5],["Q",41,72.5,40,72.5],["Q",39,72.5,38,72.5],["Q",37,72.5,36.5,72.5],["Q",36,72.5,35.5,72.5],["Q",35,72.5,34,72.5],["Q",33,72.5,32.5,72.5],["Q",32,72.5,30.5,73],["Q",29,73.5,28,74],["Q",27,74.5,26,74.5],["Q",25,74.5,24.5,74.5],["Q",24,74.5,24,75],["Q",24,75.5,24,76],["Q",24,76.5,24,77],["Q",24,77.5,24,78],["Q",24,78.5,24,79],["Q",24,79.5,24.5,81.5],["Q",25,83.5,26,85.5],["Q",27,87.5,28.5,89.5],["Q",30,91.5,31.5,93],["Q",33,94.5,34.5,95.5],["Q",36,96.5,37.5,97],["Q",39,97.5,41.5,98],["Q",44,98.5,46,99.5],["Q",48,100.5,49.5,101],["Q",51,101.5,52,102],["Q",53,102.5,54,103.5],["Q",55,104.5,56.5,105],["Q",58,105.5,58.5,106],["Q",59,106.5,59,107],["Q",59,107.5,59.5,108],["Q",60,108.5,60,109],["Q",60,109.5,60,110],["Q",60,110.5,60,111],["L",60,111.5]],"pathOffset":{"x":0,"y":0}},{"type":"path","originX":"center","originY":"center","left":266,"top":163,"width":100,"height":26,"fill":null,"stroke":"rgb(0, 255, 255)","strokeWidth":30,"strokeDashArray":null,"strokeLineCap":"round","strokeLineJoin":"round","strokeMiterLimit":10,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","path":[["M",11.5,19],["Q",11.5,19,12,19],["Q",12.5,19,12.75,19],["Q",13,19,16,19],["Q",19,19,23,19],["Q",27,19,31.5,19],["Q",36,19,39.5,19],["Q",43,19,46,19],["Q",49,19,52,19],["Q",55,19,57.5,19],["Q",60,19,61,19],["Q",62,19,63.5,19],["Q",65,19,66.5,19],["Q",68,19,69.5,19],["Q",71,19,72.5,19],["Q",74,19,75,19],["Q",76,19,77,19],["Q",78,19,78.5,19],["Q",79,19,80,19],["Q",81,19,82,19],["Q",83,19,84,19],["Q",85,19,85.5,19],["Q",86,19,86.5,19],["Q",87,19,88,19],["Q",89,19,89.5,19],["Q",90,19,90.5,19],["Q",91,19,91.5,19],["Q",92,19,92.5,18],["Q",93,17,93.5,17],["Q",94,17,94.5,17],["Q",95,17,95.5,17],["Q",96,17,96.5,17],["Q",97,17,97.5,17],["Q",98,17,98.5,17],["Q",99,17,99.5,16.5],["Q",100,16,100,15.5],["Q",100,15,100,14.5],["Q",100,14,100,13.5],["Q",100,13,100,12.5],["Q",100,12,100,11.5],["Q",100,11,100,10.5],["Q",100,10,100,9.5],["Q",100,9,100,8.5],["Q",100,8,100,7.5],["Q",100,7,100,6.5],["Q",100,6,100,5],["Q",100,4,99.5,3.5],["Q",99,3,99,2.5],["Q",99,2,98.5,1.5],["Q",98,1,97.5,0.5],["Q",97,0,96.5,0],["Q",96,0,95.5,0],["Q",95,0,94.5,0],["Q",94,0,93.5,0],["Q",93,0,92,0],["Q",91,0,89.5,0],["Q",88,0,87,0],["Q",86,0,85,0],["Q",84,0,83,0.5],["Q",82,1,80.5,1],["Q",79,1,78,1.5],["Q",77,2,76,2.5],["Q",75,3,74,3.5],["Q",73,4,72,4.5],["Q",71,5,70,5.5],["Q",69,6,67.5,7],["Q",66,8,64,8.5],["Q",62,9,60.5,9.5],["Q",59,10,57.5,11],["Q",56,12,54.5,12.5],["Q",53,13,50,13.5],["Q",47,14,45,14.5],["Q",43,15,41.5,15.5],["Q",40,16,38.5,16],["Q",37,16,35,16.5],["Q",33,17,31,17],["Q",29,17,27.5,17.5],["Q",26,18,24.5,18],["Q",23,18,21.5,18.5],["Q",20,19,19,19.5],["Q",18,20,17,20],["Q",16,20,15,20],["Q",14,20,13.5,20],["Q",13,20,12.5,20],["Q",12,20,11.5,20],["Q",11,20,11,21],["Q",11,22,10.5,22],["Q",10,22,9,22],["Q",8,22,7.5,22.5],["Q",7,23,6.5,23],["Q",6,23,5.5,23.5],["Q",5,24,4.5,24],["Q",4,24,3.5,24],["Q",3,24,2.5,24],["Q",2,24,1.5,24.5],["Q",1,25,0.5,25],["Q",0,25,0,25.5],["L",0,26]],"pathOffset":{"x":0,"y":0}},{"type":"path","originX":"center","originY":"center","left":109,"top":201.5,"width":46,"height":29,"fill":null,"stroke":"rgb(255, 0, 255)","strokeWidth":30,"strokeDashArray":null,"strokeLineCap":"round","strokeLineJoin":"round","strokeMiterLimit":10,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","path":[["M",8.5,7],["Q",8.5,7,9,7],["Q",9.5,7,8.75,7],["Q",8,7,7.5,7.5],["Q",7,8,7,8.5],["Q",7,9,6.5,9],["Q",6,9,5.5,10],["Q",5,11,5,11.5],["Q",5,12,4.5,12],["Q",4,12,3.5,12.5],["Q",3,13,3,13.5],["Q",3,14,2.5,14.5],["Q",2,15,1.5,16],["Q",1,17,1,17.5],["Q",1,18,0.5,18.5],["Q",0,19,0,19.5],["Q",0,20,0,19.5],["Q",0,19,0.5,18.5],["Q",1,18,2,17.5],["Q",3,17,3.5,16],["Q",4,15,5.5,14],["Q",7,13,8,11.5],["Q",9,10,10.5,8.5],["Q",12,7,13.5,5.5],["Q",15,4,16,3.5],["Q",17,3,18,2.5],["Q",19,2,19.5,2],["Q",20,2,20.5,1.5],["Q",21,1,21.5,1],["Q",22,1,22.5,1],["Q",23,1,23.5,1],["Q",24,1,25,1],["Q",26,1,27,1],["Q",28,1,28.5,0.5],["Q",29,0,29.5,0],["Q",30,0,30.5,0],["Q",31,0,31.5,0],["Q",32,0,33,0],["Q",34,0,35,0],["Q",36,0,37,0],["Q",38,0,38.5,0],["Q",39,0,40,0],["Q",41,0,41.5,0],["Q",42,0,42.5,0],["Q",43,0,43,0.5],["Q",43,1,43,1.5],["Q",43,2,43,2.5],["Q",43,3,43.5,3],["Q",44,3,44.5,3.5],["Q",45,4,45,4.5],["Q",45,5,45.5,5],["Q",46,5,46,6],["Q",46,7,46,7.5],["Q",46,8,46,8],["Q",46,8,46,8.5],["Q",46,9,45.5,9],["Q",45,9,44,9],["Q",43,9,41.5,9.5],["Q",40,10,39,10.5],["Q",38,11,37,11.5],["Q",36,12,35,12.5],["Q",34,13,33,14],["Q",32,15,31,15],["Q",30,15,29.5,15.5],["Q",29,16,28.5,16],["Q",28,16,27.5,16.5],["Q",27,17,26,17.5],["Q",25,18,24.5,18],["Q",24,18,23.5,18.5],["Q",23,19,23,19.5],["Q",23,20,22.5,20],["Q",22,20,21.5,20],["Q",21,20,20.5,20],["Q",20,20,19.5,20.5],["Q",19,21,18.5,21],["Q",18,21,18,22],["Q",18,23,17.5,23],["Q",17,23,16.5,23],["Q",16,23,15.5,23.5],["Q",15,24,14.5,24],["Q",14,24,13.5,24.5],["Q",13,25,12.5,25],["Q",12,25,11.5,25.5],["Q",11,26,11,26.5],["Q",11,27,10.5,27],["Q",10,27,9.5,27],["Q",9,27,9,27.5],["Q",9,28,9,28],["Q",9,28,9,28.5],["L",9,29]],"pathOffset":{"x":0,"y":0}},{"type":"path","originX":"center","originY":"center","left":118.25,"top":246,"width":1,"height":54,"fill":null,"stroke":"rgb(0, 128, 128)","strokeWidth":12,"strokeDashArray":null,"strokeLineCap":"round","strokeLineJoin":"round","strokeMiterLimit":10,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","path":[["M",0,0],["Q",0,0,0.5,0],["Q",1,0,0.75,1],["Q",0.5,2,0.5,5.5],["Q",0.5,9,0.5,11.5],["Q",0.5,14,0.5,17.5],["Q",0.5,21,0.5,23.5],["Q",0.5,26,0.5,28],["Q",0.5,30,0.5,31.5],["Q",0.5,33,0.5,34],["Q",0.5,35,0.5,35.5],["Q",0.5,36,0.5,36.5],["Q",0.5,37,0.5,37.5],["Q",0.5,38,0.5,38.5],["Q",0.5,39,0.5,40],["Q",0.5,41,0.5,41.5],["Q",0.5,42,0.5,42.5],["Q",0.5,43,0.5,43.5],["Q",0.5,44,0.5,44.5],["Q",0.5,45,0.5,45.5],["Q",0.5,46,0.5,46.5],["Q",0.5,47,0.5,47.5],["Q",0.5,48,0.5,49],["Q",0.5,50,0.5,50.5],["Q",0.5,51,0.5,51.5],["Q",0.5,52,0.5,52.5],["Q",0.5,53,0.5,53.5],["Q",0.5,54,1,54],["L",1.5,54]],"pathOffset":{"x":0,"y":0}},{"type":"path","originX":"center","originY":"center","left":84.75,"top":273,"width":16,"height":28,"fill":null,"stroke":"rgb(0, 128, 0)","strokeWidth":12,"strokeDashArray":null,"strokeLineCap":"round","strokeLineJoin":"round","strokeMiterLimit":10,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","path":[["M",0,18],["Q",0,18,0.5,18],["Q",1,18,0.75,17.5],["Q",0.5,17,0.5,16.5],["Q",0.5,16,0.5,15.5],["Q",0.5,15,0.5,13.5],["Q",0.5,12,0.5,11],["Q",0.5,10,0.5,9],["Q",0.5,8,0.5,7.5],["Q",0.5,7,1,6.5],["Q",1.5,6,2,5],["Q",2.5,4,3,3.5],["Q",3.5,3,3.5,2.5],["Q",3.5,2,4,1.5],["Q",4.5,1,4.5,0.5],["Q",4.5,0,5,0],["Q",5.5,0,6,0],["Q",6.5,0,7,1],["Q",7.5,2,8,3],["Q",8.5,4,9,5],["Q",9.5,6,10.5,7],["Q",11.5,8,11.5,9],["Q",11.5,10,12,11],["Q",12.5,12,13,12.5],["Q",13.5,13,13.5,14],["Q",13.5,15,14,15.5],["Q",14.5,16,15,16.5],["Q",15.5,17,15.5,17.5],["Q",15.5,18,15.5,19.5],["Q",15.5,21,16,21.5],["Q",16.5,22,16.5,22.5],["Q",16.5,23,16.5,24],["Q",16.5,25,16.5,25.5],["Q",16.5,26,16.5,27],["L",16.5,28]],"pathOffset":{"x":0,"y":0}},{"type":"path","originX":"center","originY":"center","left":79.5,"top":246,"width":1,"height":4,"fill":null,"stroke":"rgb(128, 0, 0)","strokeWidth":12,"strokeDashArray":null,"strokeLineCap":"round","strokeLineJoin":"round","strokeMiterLimit":10,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","path":[["M",0.5,4],["Q",0.5,4,1,4],["Q",1.5,4,0.75,4],["Q",0,4,0,3.5],["Q",0,3,0,2.5],["Q",0,2,0,1.5],["Q",0,1,0,0.5],["L",0,0]],"pathOffset":{"x":0,"y":0}},{"type":"path","originX":"center","originY":"center","left":77,"top":231,"width":1,"height":0,"fill":null,"stroke":"rgb(255, 0, 0)","strokeWidth":12,"strokeDashArray":null,"strokeLineCap":"round","strokeLineJoin":"round","strokeMiterLimit":10,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","path":[["M",0,0],["Q",0,0,0.5,0],["L",1,0]],"pathOffset":{"x":0,"y":0}},{"type":"path","originX":"center","originY":"center","left":60,"top":257,"width":1,"height":0,"fill":null,"stroke":"rgb(255, 0, 0)","strokeWidth":12,"strokeDashArray":null,"strokeLineCap":"round","strokeLineJoin":"round","strokeMiterLimit":10,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","path":[["M",0,0],["Q",0,0,0.5,0],["L",1,0]],"pathOffset":{"x":0,"y":0}},{"type":"path","originX":"center","originY":"center","left":102,"top":239,"width":1,"height":0,"fill":null,"stroke":"rgb(255, 0, 0)","strokeWidth":12,"strokeDashArray":null,"strokeLineCap":"round","strokeLineJoin":"round","strokeMiterLimit":10,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","path":[["M",0,0],["Q",0,0,0.5,0],["L",1,0]],"pathOffset":{"x":0,"y":0}},{"type":"path","originX":"center","originY":"center","left":68.25,"top":248.5,"width":7,"height":3,"fill":null,"stroke":"rgb(128, 128, 128)","strokeWidth":12,"strokeDashArray":null,"strokeLineCap":"round","strokeLineJoin":"round","strokeMiterLimit":10,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","path":[["M",0,3],["Q",0,3,0.5,3],["Q",1,3,1.25,3],["Q",1.5,3,2,2.5],["Q",2.5,2,3,2],["Q",3.5,2,3.5,1.5],["Q",3.5,1,4,1],["Q",4.5,1,5,1],["Q",5.5,1,5.5,0.5],["Q",5.5,0,6,0],["Q",6.5,0,7,0],["L",7.5,0]],"pathOffset":{"x":0,"y":0}},{"type":"path","originX":"center","originY":"center","left":90.5,"top":243,"width":7,"height":0,"fill":null,"stroke":"rgb(128, 128, 128)","strokeWidth":12,"strokeDashArray":null,"strokeLineCap":"round","strokeLineJoin":"round","strokeMiterLimit":10,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","path":[["M",6.5,0],["Q",6.5,0,7,0],["Q",7.5,0,6.75,0],["Q",6,0,5.5,0],["Q",5,0,4.5,0],["Q",4,0,3.5,0],["Q",3,0,2.5,0],["Q",2,0,1.5,0],["Q",1,0,0.5,0],["L",0,0]],"pathOffset":{"x":0,"y":0}},{"type":"path","originX":"center","originY":"center","left":78.63,"top":244.5,"width":3,"height":3,"fill":null,"stroke":"rgb(128, 0, 0)","strokeWidth":12,"strokeDashArray":null,"strokeLineCap":"round","strokeLineJoin":"round","strokeMiterLimit":10,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","path":[["M",2.5,3],["Q",2.5,3,3,3],["Q",3.5,3,3.25,2.5],["Q",3,2,2,2],["Q",1,2,1,1.5],["Q",1,1,1,0.5],["Q",1,0,0.5,0],["L",0,0]],"pathOffset":{"x":0,"y":0}},{"type":"path","originX":"center","originY":"center","left":263.5,"top":214,"width":51,"height":14,"fill":null,"stroke":"rgb(128, 0, 128)","strokeWidth":12,"strokeDashArray":null,"strokeLineCap":"round","strokeLineJoin":"round","strokeMiterLimit":10,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","path":[["M",5.5,14],["Q",5.5,14,6,14],["Q",6.5,14,6.75,14],["Q",7,14,7.5,14],["Q",8,14,9.5,14],["Q",11,14,11.5,14],["Q",12,14,13,14],["Q",14,14,15.5,14],["Q",17,14,19,14],["Q",21,14,22.5,14],["Q",24,14,25,14],["Q",26,14,27.5,14],["Q",29,14,30,14],["Q",31,14,31.5,14],["Q",32,14,32.5,14],["Q",33,14,33.5,14],["Q",34,14,34.5,14],["Q",35,14,35.5,14],["Q",36,14,37,14],["Q",38,14,39.5,14],["Q",41,14,42,14],["Q",43,14,44,14],["Q",45,14,46,14],["Q",47,14,47.5,14],["Q",48,14,49,14],["Q",50,14,50.5,14],["Q",51,14,51,13.5],["Q",51,13,51,12.5],["Q",51,12,51,11.5],["Q",51,11,51,10],["Q",51,9,51,8.5],["Q",51,8,50.5,7],["Q",50,6,49,5],["Q",48,4,48,3.5],["Q",48,3,47.5,2.5],["Q",47,2,47,1.5],["Q",47,1,46.5,1],["Q",46,1,46,0.5],["Q",46,0,45.5,0],["Q",45,0,44.5,0],["Q",44,0,43.5,0],["Q",43,0,42.5,0],["Q",42,0,41.5,0],["Q",41,0,40.5,0],["Q",40,0,39,0],["Q",38,0,37,0],["Q",36,0,35,0],["Q",34,0,32.5,0],["Q",31,0,30,0],["Q",29,0,28,0.5],["Q",27,1,25.5,1.5],["Q",24,2,23,2.5],["Q",22,3,21,3],["Q",20,3,19.5,3.5],["Q",19,4,18,4],["Q",17,4,16.5,4.5],["Q",16,5,15,5],["Q",14,5,13,5],["Q",12,5,11.5,5.5],["Q",11,6,10,6],["Q",9,6,8,6],["Q",7,6,6.5,6],["Q",6,6,5,6.5],["Q",4,7,3,7],["Q",2,7,1.5,7],["Q",1,7,0.5,7.5],["Q",0,8,0,8.5],["Q",0,9,0.5,9],["Q",1,9,2.5,9],["Q",4,9,5,9],["Q",6,9,8.5,9],["Q",11,9,13,9],["Q",15,9,16.5,9],["Q",18,9,20,9],["Q",22,9,23,8.5],["Q",24,8,25.5,8],["Q",27,8,28.5,7.5],["Q",30,7,30.5,7],["Q",31,7,32,7],["Q",33,7,33.5,7],["Q",34,7,34.5,7],["Q",35,7,35.5,7],["Q",36,7,36,6.5],["Q",36,6,36,5.5],["Q",36,5,35.5,5],["Q",35,5,34.5,5],["Q",34,5,33.5,5],["Q",33,5,32.5,5],["Q",32,5,31,5],["Q",30,5,29.5,5],["Q",29,5,28.5,5],["Q",28,5,27,5],["Q",26,5,25.5,5],["Q",25,5,24.5,5],["Q",24,5,23.5,5],["L",23,5]],"pathOffset":{"x":0,"y":0}},{"type":"path","originX":"center","originY":"center","left":259.88,"top":200,"width":0,"height":18,"fill":null,"stroke":"rgb(0, 0, 0)","strokeWidth":12,"strokeDashArray":null,"strokeLineCap":"round","strokeLineJoin":"round","strokeMiterLimit":10,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","path":[["M",0,18],["Q",0,18,0.5,18],["Q",1,18,0.75,17.5],["Q",0.5,17,0.5,16.5],["Q",0.5,16,0.5,15.5],["Q",0.5,15,0.5,14],["Q",0.5,13,0.5,12.5],["Q",0.5,12,0.5,11.5],["Q",0.5,11,0.5,10.5],["Q",0.5,10,0.5,8.5],["Q",0.5,7,0.5,6.5],["Q",0.5,6,0.5,5.5],["Q",0.5,5,0.5,4.5],["Q",0.5,4,0.5,3.5],["Q",0.5,3,0.5,2.5],["Q",0.5,2,0.5,1.5],["Q",0.5,1,0.5,0.5],["L",0.5,0]],"pathOffset":{"x":0,"y":0}},{"type":"path","originX":"center","originY":"center","left":266.75,"top":176.5,"width":30,"height":53,"fill":null,"stroke":"rgb(255, 255, 255)","strokeWidth":12,"strokeDashArray":null,"strokeLineCap":"round","strokeLineJoin":"round","strokeMiterLimit":10,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","path":[["M",0,40],["Q",0,40,0.5,40],["Q",1,40,0.75,39.5],["Q",0.5,39,0.5,38.5],["Q",0.5,38,0.5,37.5],["Q",0.5,37,0.5,36.5],["Q",0.5,36,1,36],["Q",1.5,36,2.5,36],["Q",3.5,36,5,36],["Q",6.5,36,7,36],["Q",7.5,36,9,36],["Q",10.5,36,11.5,36],["Q",12.5,36,13,35],["Q",13.5,34,14,34],["Q",14.5,34,15,34],["Q",15.5,34,16,34],["Q",16.5,34,17,34],["Q",17.5,34,18.5,34],["Q",19.5,34,21.5,33.5],["Q",23.5,33,24.5,32.5],["Q",25.5,32,26.5,31.5],["Q",27.5,31,28,31],["Q",28.5,31,29,31],["Q",29.5,31,30,31],["Q",30.5,31,30.5,30.5],["Q",30.5,30,30.5,29.5],["Q",30.5,29,30.5,28.5],["Q",30.5,28,30.5,27.5],["Q",30.5,27,30.5,26.5],["Q",30.5,26,30.5,25.5],["Q",30.5,25,30.5,24.5],["Q",30.5,24,30.5,23.5],["Q",30.5,23,30,23],["Q",29.5,23,29,23],["Q",28.5,23,28,23],["Q",27.5,23,27.5,22.5],["Q",27.5,22,27,22],["Q",26.5,22,26,21.5],["Q",25.5,21,24.5,21],["Q",23.5,21,23,20.5],["Q",22.5,20,22,20],["Q",21.5,20,21,19.5],["Q",20.5,19,20,18.5],["Q",19.5,18,19,17.5],["Q",18.5,17,18.5,16.5],["Q",18.5,16,18,16],["Q",17.5,16,17.5,15.5],["Q",17.5,15,17.5,14.5],["Q",17.5,14,17,14],["Q",16.5,14,16,13],["Q",15.5,12,15.5,11.5],["Q",15.5,11,15,10.5],["Q",14.5,10,14,9],["Q",13.5,8,13,7.5],["Q",12.5,7,12,6.5],["Q",11.5,6,11.5,5.5],["Q",11.5,5,11.5,4.5],["Q",11.5,4,11,3.5],["Q",10.5,3,10.5,2.5],["Q",10.5,2,10.5,1.5],["Q",10.5,1,10,1],["Q",9.5,1,9.5,0.5],["Q",9.5,0,9,0],["Q",8.5,0,8.5,0.5],["Q",8.5,1,8.5,1.5],["Q",8.5,2,8,2.5],["Q",7.5,3,7.5,4],["Q",7.5,5,7.5,5.5],["Q",7.5,6,7,6.5],["Q",6.5,7,6.5,8],["Q",6.5,9,6.5,9.5],["Q",6.5,10,6.5,10.5],["Q",6.5,11,6.5,11.5],["Q",6.5,12,6.5,12.5],["Q",6.5,13,6.5,13],["Q",6.5,13,6.5,13.5],["Q",6.5,14,6.5,14.5],["Q",6.5,15,6.5,15.5],["Q",6.5,16,6.5,16.5],["Q",6.5,17,6.5,18],["Q",6.5,19,6,19.5],["Q",5.5,20,5.5,20.5],["Q",5.5,21,5.5,21.5],["Q",5.5,22,5,22.5],["Q",4.5,23,4,23.5],["Q",3.5,24,3.5,24.5],["Q",3.5,25,3.5,25.5],["Q",3.5,26,3,27],["Q",2.5,28,2.5,28.5],["Q",2.5,29,2.5,30],["Q",2.5,31,2.5,31.5],["Q",2.5,32,3,32],["Q",3.5,32,4,31.5],["Q",4.5,31,5.5,30.5],["Q",6.5,30,8,29.5],["Q",9.5,29,10.5,28.5],["Q",11.5,28,12,28],["Q",12.5,28,13,27.5],["Q",13.5,27,14,27],["Q",14.5,27,14.5,27],["Q",14.5,27,14.5,27.5],["Q",14.5,28,14.5,28.5],["Q",14.5,29,14.5,29.5],["Q",14.5,30,14.5,30.5],["Q",14.5,31,15,31],["Q",15.5,31,16.5,31],["Q",17.5,31,18,31],["Q",18.5,31,19,31],["Q",19.5,31,20,31],["Q",20.5,31,21,31],["Q",21.5,31,21.5,31],["Q",21.5,31,22,31],["Q",22.5,31,22.5,30.5],["Q",22.5,30,23,30],["Q",23.5,30,24,30],["Q",24.5,30,25,30],["Q",25.5,30,25.5,30.5],["Q",25.5,31,25.5,32],["Q",25.5,33,25.5,33.5],["Q",25.5,34,25.5,34.5],["Q",25.5,35,25.5,35.5],["Q",25.5,36,25.5,36.5],["Q",25.5,37,25.5,37.5],["Q",25.5,38,25.5,38.5],["Q",25.5,39,25.5,39.5],["Q",25.5,40,25.5,40.5],["Q",25.5,41,25.5,41.5],["Q",25.5,42,25,42.5],["Q",24.5,43,24,43.5],["Q",23.5,44,23,44.5],["Q",22.5,45,22.5,45.5],["Q",22.5,46,22,47],["Q",21.5,48,21,49],["Q",20.5,50,20,50.5],["Q",19.5,51,19.5,51.5],["Q",19.5,52,19,52],["Q",18.5,52,18,52.5],["Q",17.5,53,17,53],["Q",16.5,53,16,53],["Q",15.5,53,15,53],["Q",14.5,53,14,53],["Q",13.5,53,13,53],["Q",12.5,53,11.5,53],["Q",10.5,53,10,53],["Q",9.5,53,9,53],["Q",8.5,53,8,53],["Q",7.5,53,7,53],["Q",6.5,53,6,53],["Q",5.5,53,5,53],["Q",4.5,53,4,53],["Q",3.5,53,3,53],["Q",2.5,53,2.5,52.5],["Q",2.5,52,2.5,51.5],["Q",2.5,51,2.5,50.5],["Q",2.5,50,2.5,49.5],["Q",2.5,49,2.5,48.5],["Q",2.5,48,2.5,47.5],["Q",2.5,47,2.5,46.5],["Q",2.5,46,3.5,45.5],["Q",4.5,45,5.5,43.5],["Q",6.5,42,8.5,40.5],["Q",10.5,39,12,37.5],["Q",13.5,36,14.5,35.5],["Q",15.5,35,16,34],["Q",16.5,33,17,33],["Q",17.5,33,18,33],["Q",18.5,33,19,33],["Q",19.5,33,20,33],["Q",20.5,33,21,33],["Q",21.5,33,22,33],["Q",22.5,33,23,33],["L",23.5,33]],"pathOffset":{"x":0,"y":0}},{"type":"path","originX":"center","originY":"center","left":270.25,"top":132,"width":17,"height":10,"fill":null,"stroke":"rgb(255, 0, 0)","strokeWidth":12,"strokeDashArray":null,"strokeLineCap":"round","strokeLineJoin":"round","strokeMiterLimit":10,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","path":[["M",0,10],["Q",0,10,0.5,10],["Q",1,10,1.25,9.5],["Q",1.5,9,3,8.5],["Q",4.5,8,5.5,8],["Q",6.5,8,7,7.5],["Q",7.5,7,8.5,6.5],["Q",9.5,6,10,5.5],["Q",10.5,5,11,5],["Q",11.5,5,12,4.5],["Q",12.5,4,13.5,3.5],["Q",14.5,3,14.5,2.5],["Q",14.5,2,15,2],["Q",15.5,2,16,2],["Q",16.5,2,16.5,1.5],["Q",16.5,1,17,1],["Q",17.5,1,17.5,0.5],["L",17.5,0]],"pathOffset":{"x":0,"y":0}}],"background":""}',
                              ]
    random_image = random.sample(list_of_default_images, 1)[0]

    # Now, store step 3.
    created_game_id = store_data('first_image_id',
                                 'images',
                                 random_image,
                                 default_username="A spirit of the woods",
                                 supplied_game_id=created_game_id)

    return created_game_id


@requires_username
def store_data(game_column, tablename, data, default_username=None, supplied_game_id=None):
    ''' Accepts a PSQL content table name and data to store in that table,
    inserts the data, and conducts a join on the games table. '''
    if not data:
        raise ValueError('Prompt data not supplied to store_prompt')

    # If this is the first prompt in a series, create a new game
    # and store its id in the session cookie.
    if game_column == 'first_prompt_id':
        session['game_id'] = create_game()

    with closing(connect_db()) as db:
        cur = db.cursor()

        if default_username is not None:
            # The newly-created first prompt MAY NOT BE created
            # by the same user who is going to reply to it
            username = str(default_username)
        else:
            username = session['username']

        now = datetime.datetime.utcnow()
        if tablename == 'prompts':
            cur.execute(model.DB_INSERT_PROMPT,
                        [username, data, now])
        elif tablename == 'images':
            cur.execute(model.DB_INSERT_IMAGE,
                        [username, data, now])
        inserted_data_id = cur.fetchone()[0]

        # This part is for chaining together default prompt creation.
        # Supplied game IDs are so we can refer to the same game while
        # changing the default username.
        if supplied_game_id is not None:
            game_id_for_database_string = supplied_game_id
        else:
            game_id_for_database_string = session['game_id']

        # "Postgres made us do it." -- Jason
        execute_string = model.DB_UPDATE_GAMES % (game_column,
                                                  '%s',
                                                  game_id_for_database_string)
        cur.execute(execute_string,
                    [inserted_data_id])
        db.commit()
        # When we're making a default-user game,
        # return the game_id.
        # Otherwise don't bother.
        if default_username is not None:
            return game_id_for_database_string


@requires_username
def get_games():
    """Return a list of dictionaries for games that
    the current user has contributed to"""
    GET_PROMPTS = "SELECT id FROM prompts WHERE username=%s"
    GET_IMAGES = "SELECT id FROM images WHERE username=%s"
    GET_GAMES_P = "SELECT id FROM games WHERE first_prompt_id=%s OR second_prompt_id=%s OR third_prompt_id=%s"
    GET_GAMES_I = "SELECT id FROM games WHERE first_image_id=%s OR second_image_id=%s"
    GET_DATA_IDS = "SELECT * FROM games WHERE id=%s"
    with closing(connect_db()) as db:
        cur = db.cursor()
        username = session['username']
        cur.execute(GET_PROMPTS, [username])
        prompt_ids = cur.fetchall()
        cur.execute(GET_IMAGES, [username])
        image_ids = cur.fetchall()
        games = []
        for i_d in prompt_ids:
            cur.execute(GET_GAMES_P, [i_d, i_d, i_d])
            games += cur.fetchall()
        for i_d in image_ids:
            cur.execute(GET_GAMES_I, [i_d, i_d])
            games += cur.fetchall()
        #Cleanup! Gets rid of duplicates and returns a list of ints rather than tuples
        games = [game[0] for game in list(set(games))]
        #Now we fetch a list of ids of prompts/images for each game that the user
        #has contributed to
        game_data_ids = []
        for g in games:
            cur.execute(GET_DATA_IDS, [g])
            game_data_ids.append(cur.fetchall())
            db.commit()
        game_data_ids = [gdi[0] for gdi in game_data_ids]
        #We have the ids of all data we need, in order. Now we fetch the actual data
        def build_dict(game):
            keys = ['id', 'first_prompt', 'first_image', 'second_prompt', 'second_image', 'third_prompt']
            i_d = game[0]
            cur.execute("SELECT data FROM prompts WHERE id=%s", [game[1]])
            first_prompt = cur.fetchall()
            cur.execute("SELECT data FROM images WHERE id=%s", [game[2]])
            first_image = cur.fetchall()
            cur.execute("SELECT data FROM prompts WHERE id=%s", [game[3]])
            second_prompt = cur.fetchall()
            cur.execute("SELECT data FROM images WHERE id=%s", [game[4]])
            second_image = cur.fetchall()
            cur.execute("SELECT data FROM prompts WHERE id=%s", [game[5]])
            third_prompt = cur.fetchall()
            values = [i_d, first_prompt, first_image, second_prompt, second_image, third_prompt]
            for i in range(1, 6):
                if len(values[i]) == 0:
                    values[i] = None
                elif len(values[i]) == 1:
                    values[i] = values[i][0][0]
            result = dict(zip(keys, values))
            if result['first_image'] is None:
                result['first_image'] = sorry_image
            if result['second_image'] is None:
                result['second_image'] = sorry_image

            return result
        db.commit()
        games = [build_dict(game) for game in game_data_ids]
        return games

@app.route('/')
def home():
    return render_template('step_one.html')


@app.route('/logout')
def logout():
    session.pop('username', None)
    return redirect(url_for('home'))


@app.route('/step_one')
def step_one():
    return render_template('step_one.html')


@app.route('/step_two', methods=['POST'])
@requires_username
def step_two():
    store_data('first_prompt_id', 'prompts', request.form['prompt'])
    response = {'html': render_template('step_two.html'),
                'prompt': get_first_prompt()}
    return json.dumps(response)


@app.route('/step_three', methods=['POST'])
@requires_username
def step_three():
    print json.dumps(request.json)
    store_data('first_image_id', 'images', json.dumps(request.json))
    response = {'html': render_template('step_three.html'),
                'drawing': get_first_image()}
    return json.dumps(response)


@app.route('/step_four', methods=['POST'])
@requires_username
def step_four():
    store_data('second_prompt_id', 'prompts', request.form['prompt'])
    response = {'html': render_template('step_two.html'),
                'prompt': get_second_prompt()}
    return json.dumps(response)


@app.route('/step_five', methods=['POST'])
@requires_username
def step_five():
    store_data('second_image_id', 'images', json.dumps(request.json))
    response = {'html': render_template('step_three.html'),
                'drawing': get_second_image()}
    return json.dumps(response)


@app.route('/final', methods=['POST'])
@requires_username
def final_step():
    store_data('third_prompt_id', 'prompts', request.form['prompt'])
    return 'OK'


@app.route('/show_games')
@requires_username
def show_games():
    games = get_games()
    games = games[:9]
    return render_template('show_games.html',
                           user=session['username'],
                           games=games)


@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        session['username'] = request.form['username'].encode('utf-8')
        return redirect(url_for('home'))
    print session
    return render_template('login.html')

if __name__ == '__main__':
    app.run(debug=True)
